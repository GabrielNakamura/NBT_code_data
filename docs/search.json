[
  {
    "objectID": "R/09_V_model_Fig4.html",
    "href": "R/09_V_model_Fig4.html",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "# data\nlibrary(readr)     # reading CSV files\nlibrary(here)      # constructing file paths\nlibrary(ggeffects) # extracting model predictions\nlibrary(tibble)    # creating tibbles (data frames)\nlibrary(dplyr)     # data manipulation\n\n# plots\nlibrary(scales)    # scale transformations and labels\nlibrary(ggplot2)   # data visualization\nlibrary(patchwork) # combining plots\n\nReading model results for counting, DR, DC and native and NBT turnover\n\n# Data from 03_C_data_preparation.qmd\ndf_country_complete6 &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\n\n# Data from 04_D_model_NBTs.qmd\nmod_counting_NBT &lt;- readRDS(here::here(\"output\", \n                                       \"models\", \n                                       \"model_res_counting.rds\")) # NBT total countings\nmod_DC &lt;- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dc.rds\"))\nmod_DR &lt;- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dr.rds\"))\nmod_turnover_native &lt;- readRDS(here::here(\"output\", \n                                          \"models\",\n                                      \"model_res_turnover_native.rds\"))\nmod_turnover_nbt &lt;- readRDS(here::here(\"output\", \n                                       \"models\",\n                                       \"model_res_turnover_nbt.rds\"))\n\n# function\nsqrt_trans &lt;- scales::trans_new(\"sqrt_with_zero\", \n                        transform = function(x) ifelse(x == 0, 0, sqrt(x)),\n                        inverse = function(x) x^2)\n\n\n\n\n\n# Extracting predicted values\npred_mod_counting_gdp &lt;-\n  ggeffects::ggpredict(mod_counting_NBT, \"gdp.pad[-0.88:4 by=.05]\")\n\n\npred_mod_counting_richness &lt;-\n  ggeffects::ggpredict(mod_counting_NBT, \"native.richness.pad[-0.4:8.6 by=.05]\")\n\n# scaling back response variables\nsource(here::here(\"R\", \"functions\", \"function_scale_back.R\"))\n\n## GDP\nscale_gdp &lt;- scale(df_country_complete6$e_migdppc)\n\npred_mod_counting_gdp2 &lt;- scale_back(data =  pred_mod_counting_gdp, scaled = scale_gdp)\n\n## Native Richness\nscale_native_richness &lt;- scale(df_country_complete6$native_richness)\n\npred_mod_counting_richness2 &lt;- scale_back(data =  pred_mod_counting_richness, scaled = scale_native_richness)\n\n\n# plotting figure 4a\na &lt;-\n  tibble(\n  x= df_country_complete6$e_migdppc,\n  y = df_country_complete6$total_country_museum,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_counting_gdp2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_counting_gdp2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()\n                     ))+\n  scale_y_continuous(trans = sqrt_trans,\n                     expand = expansion(mult = c(0,0)),\n                     breaks = c(0,100,1000,5000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     )+\n  guides(\n    y = guide_axis_logticks()\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Number of NBT\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks.x = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000))\n\n# plotting figure 4b\nb &lt;- tibble(\n  x= df_country_complete6$native_richness,\n  y = df_country_complete6$total_country_museum,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_counting_richness2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = ifelse(conf.high &gt;= 20000, 20000, conf.high)),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_counting_richness2,\n            aes(x = x_original,\n                y = predicted))+\n  annotate(\n    \"segment\",\n    x = 2317.744, xend = Inf,\n    y = Inf, yend = Inf,\n    linetype = \"dotted\"\n  )+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,3000,1000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     )+\n  scale_y_continuous(trans = sqrt_trans,\n                     expand = expansion(mult = c(0,0)),\n                     breaks = c(0,1000,10000,100000,300000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  guides(\n    y = guide_axis_logticks()\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Native richness\",\n       y = \"Number of NBT\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks.x = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(-100,NA),\n                  ylim = c(NA, 20000))\n\n\n\n\n\n# predicted values\npred_mod_dc &lt;-\n  ggeffects::ggpredict(mod_DC, \"gdp.pad[-0.88:4 by=.05]\")\n\n\npred_mod_dc_gdp2 &lt;- scale_back(data =  pred_mod_dc, scaled = scale_gdp)\n\n\n# plotting figure 4c\nc &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$prop_DC,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_dc_gdp2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_dc_gdp2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     ) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Domestic Contribution\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n    \n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))\n\n\n\n\n\n# predicted values\npred_mod_dr &lt;-\n  ggeffects::ggpredict(mod_DR, \"gdp.pad[-0.88:4 by=.05]\")\n\npred_mod_dr_gdp2 &lt;- scale_back(data =  pred_mod_dr, scaled = scale_gdp)\n\n# plotting figure 4d\nd &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$prop_DR,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_dr_gdp2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_dr_gdp2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     ) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Domestic Retention\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))\n\n\n\n\n\npred_mod_beta_native &lt;- \n  ggeffects::ggpredict(mod_turnover_native, \"gdp.pad[-0.88:4 by=.05]\")\n\n\npred_mod_beta_native2 &lt;- scale_back(data =  pred_mod_beta_native, scaled = scale_gdp)\n\n# plotting figure 4e\ne &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$native.beta.model,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_beta_native2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_beta_native2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     )+\n  scale_y_continuous(expand = expansion(mult = c(0,0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Native turnover\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))\n\n\n\n\n\n# predictions\npred_mod_beta_type &lt;- \n  ggeffects::ggpredict(mod_turnover_nbt, \"gdp.pad[-0.88:4 by=.05]\")\n\npred_mod_beta_type2 &lt;- scale_back(data =  pred_mod_beta_type, scaled = scale_gdp)\n\n# plotting figure 4f\nf &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$type.beta.model,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_beta_type2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_beta_type2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"NBT turnover\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))\n\n\n\n\n\nfig_model &lt;-\n  a+b+c+d+e+f+\n  patchwork::plot_annotation(tag_levels = \"a\")+\n  patchwork::plot_layout(nrow = 3)&\n  theme(\n    plot.margin = margin(5.5,8,5.5,5.5,\"pt\")\n  )\n\n\n# saving model figure\n\nggsave(here::here(\"output\", \"figures\", \"Fig4_models.png\"),\n       width = 6, height = 8,\n       dpi = 600, plot = fig_model)",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/09_V_model_Fig4.html#loading-packages-data-and-functions",
    "href": "R/09_V_model_Fig4.html#loading-packages-data-and-functions",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "# data\nlibrary(readr)     # reading CSV files\nlibrary(here)      # constructing file paths\nlibrary(ggeffects) # extracting model predictions\nlibrary(tibble)    # creating tibbles (data frames)\nlibrary(dplyr)     # data manipulation\n\n# plots\nlibrary(scales)    # scale transformations and labels\nlibrary(ggplot2)   # data visualization\nlibrary(patchwork) # combining plots\n\nReading model results for counting, DR, DC and native and NBT turnover\n\n# Data from 03_C_data_preparation.qmd\ndf_country_complete6 &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\n\n# Data from 04_D_model_NBTs.qmd\nmod_counting_NBT &lt;- readRDS(here::here(\"output\", \n                                       \"models\", \n                                       \"model_res_counting.rds\")) # NBT total countings\nmod_DC &lt;- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dc.rds\"))\nmod_DR &lt;- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dr.rds\"))\nmod_turnover_native &lt;- readRDS(here::here(\"output\", \n                                          \"models\",\n                                      \"model_res_turnover_native.rds\"))\nmod_turnover_nbt &lt;- readRDS(here::here(\"output\", \n                                       \"models\",\n                                       \"model_res_turnover_nbt.rds\"))\n\n# function\nsqrt_trans &lt;- scales::trans_new(\"sqrt_with_zero\", \n                        transform = function(x) ifelse(x == 0, 0, sqrt(x)),\n                        inverse = function(x) x^2)",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/09_V_model_Fig4.html#total-nbt-counting",
    "href": "R/09_V_model_Fig4.html#total-nbt-counting",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "# Extracting predicted values\npred_mod_counting_gdp &lt;-\n  ggeffects::ggpredict(mod_counting_NBT, \"gdp.pad[-0.88:4 by=.05]\")\n\n\npred_mod_counting_richness &lt;-\n  ggeffects::ggpredict(mod_counting_NBT, \"native.richness.pad[-0.4:8.6 by=.05]\")\n\n# scaling back response variables\nsource(here::here(\"R\", \"functions\", \"function_scale_back.R\"))\n\n## GDP\nscale_gdp &lt;- scale(df_country_complete6$e_migdppc)\n\npred_mod_counting_gdp2 &lt;- scale_back(data =  pred_mod_counting_gdp, scaled = scale_gdp)\n\n## Native Richness\nscale_native_richness &lt;- scale(df_country_complete6$native_richness)\n\npred_mod_counting_richness2 &lt;- scale_back(data =  pred_mod_counting_richness, scaled = scale_native_richness)\n\n\n# plotting figure 4a\na &lt;-\n  tibble(\n  x= df_country_complete6$e_migdppc,\n  y = df_country_complete6$total_country_museum,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_counting_gdp2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_counting_gdp2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()\n                     ))+\n  scale_y_continuous(trans = sqrt_trans,\n                     expand = expansion(mult = c(0,0)),\n                     breaks = c(0,100,1000,5000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     )+\n  guides(\n    y = guide_axis_logticks()\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Number of NBT\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks.x = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000))\n\n# plotting figure 4b\nb &lt;- tibble(\n  x= df_country_complete6$native_richness,\n  y = df_country_complete6$total_country_museum,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_counting_richness2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = ifelse(conf.high &gt;= 20000, 20000, conf.high)),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_counting_richness2,\n            aes(x = x_original,\n                y = predicted))+\n  annotate(\n    \"segment\",\n    x = 2317.744, xend = Inf,\n    y = Inf, yend = Inf,\n    linetype = \"dotted\"\n  )+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,3000,1000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     )+\n  scale_y_continuous(trans = sqrt_trans,\n                     expand = expansion(mult = c(0,0)),\n                     breaks = c(0,1000,10000,100000,300000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  guides(\n    y = guide_axis_logticks()\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Native richness\",\n       y = \"Number of NBT\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks.x = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(-100,NA),\n                  ylim = c(NA, 20000))",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/09_V_model_Fig4.html#domestic-contribution",
    "href": "R/09_V_model_Fig4.html#domestic-contribution",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "# predicted values\npred_mod_dc &lt;-\n  ggeffects::ggpredict(mod_DC, \"gdp.pad[-0.88:4 by=.05]\")\n\n\npred_mod_dc_gdp2 &lt;- scale_back(data =  pred_mod_dc, scaled = scale_gdp)\n\n\n# plotting figure 4c\nc &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$prop_DC,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_dc_gdp2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_dc_gdp2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     ) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Domestic Contribution\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n    \n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/09_V_model_Fig4.html#domestic-retention",
    "href": "R/09_V_model_Fig4.html#domestic-retention",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "# predicted values\npred_mod_dr &lt;-\n  ggeffects::ggpredict(mod_DR, \"gdp.pad[-0.88:4 by=.05]\")\n\npred_mod_dr_gdp2 &lt;- scale_back(data =  pred_mod_dr, scaled = scale_gdp)\n\n# plotting figure 4d\nd &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$prop_DR,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_dr_gdp2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_dr_gdp2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     ) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Domestic Retention\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/09_V_model_Fig4.html#native-turnover",
    "href": "R/09_V_model_Fig4.html#native-turnover",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "pred_mod_beta_native &lt;- \n  ggeffects::ggpredict(mod_turnover_native, \"gdp.pad[-0.88:4 by=.05]\")\n\n\npred_mod_beta_native2 &lt;- scale_back(data =  pred_mod_beta_native, scaled = scale_gdp)\n\n# plotting figure 4e\ne &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$native.beta.model,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_beta_native2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_beta_native2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())\n                     )+\n  scale_y_continuous(expand = expansion(mult = c(0,0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Native turnover\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/09_V_model_Fig4.html#nbt-turnover",
    "href": "R/09_V_model_Fig4.html#nbt-turnover",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "# predictions\npred_mod_beta_type &lt;- \n  ggeffects::ggpredict(mod_turnover_nbt, \"gdp.pad[-0.88:4 by=.05]\")\n\npred_mod_beta_type2 &lt;- scale_back(data =  pred_mod_beta_type, scaled = scale_gdp)\n\n# plotting figure 4f\nf &lt;- tibble(\n  x = df_country_complete6$e_migdppc,\n  y = df_country_complete6$type.beta.model,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |&gt;\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_beta_type2,\n              aes(x = x_original,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_beta_type2,\n            aes(x = x_original,\n                y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,40000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"NBT turnover\") +\n  theme_classic()+\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(color = \"black\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid.major = element_line(linetype = \"dashed\",\n                                    lineend = \"round\"),\n    legend.position = \"none\"\n  )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(0,40000),\n                  ylim = c(0,1))",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/09_V_model_Fig4.html#joining-all-plots",
    "href": "R/09_V_model_Fig4.html#joining-all-plots",
    "title": "09 - Results from generalized linear models (Figure 4)",
    "section": "",
    "text": "fig_model &lt;-\n  a+b+c+d+e+f+\n  patchwork::plot_annotation(tag_levels = \"a\")+\n  patchwork::plot_layout(nrow = 3)&\n  theme(\n    plot.margin = margin(5.5,8,5.5,5.5,\"pt\")\n  )\n\n\n# saving model figure\n\nggsave(here::here(\"output\", \"figures\", \"Fig4_models.png\"),\n       width = 6, height = 8,\n       dpi = 600, plot = fig_model)",
    "crumbs": [
      "R",
      "09 - Results from generalized linear models (Figure 4)"
    ]
  },
  {
    "objectID": "R/07_V_scatterplot_Fig2.html",
    "href": "R/07_V_scatterplot_Fig2.html",
    "title": "07 - DC and DR for each region per time (Figure 2)",
    "section": "",
    "text": "Reading libraries\n\nlibrary(dplyr)    # Data manipulation\nlibrary(here)     # File path management\nlibrary(tidyr)    # Data tidying\nlibrary(ggplot2)  # Data visualization\nlibrary(scales)   # Scale transformations and labels\nlibrary(ggarrow)  # Adding arrows to ggplot\n\nHere we combined two metrics, DC and DR by time and regions, to express the changes of NBTs distribution for each of these regions. This is aimed to be the Figure 02 in the manuscript. The Figure 2 in the main text was further edited in inkscape to better acomodate the arrows and include the quadrant information in the first plot.\n\n# Data from 01_C_data_preparation.qmd\n\nflow_period_region_prop &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"flow_period_region_prop.csv\"))\n\nAdd lag values for visualization\n\nflow_period_region_prop_lag &lt;- flow_period_region_prop |&gt;\n  dplyr::group_by(region_type) |&gt;\n  dplyr::mutate(new_DC = dplyr::lag(prop_DC),\n                new_DR = dplyr::lag(prop_DR)) |&gt; \n  dplyr::ungroup()\n\n\n\n\nflow_period_region_prop_lag |&gt;\n  dplyr::filter(dplyr::if_all(c(prop_DC, prop_DR, \n                                new_DC, new_DR), \n                              ~ . != 0 | is.na(.))) |&gt; \n  ggplot(aes(x = prop_DC, y = prop_DR, fill = region_type))+\n  geom_hline(yintercept = 0.5, linetype = \"dashed\")+\n  geom_vline(xintercept = 0.5, linetype = \"dashed\")+\n  geom_arrow_segment(\n    aes(x = new_DC, xend = prop_DC,\n        y = new_DR, yend = prop_DR),\n    color = \"grey\",\n    arrow_head = NULL,\n    arrow_mid  = arrow_head_wings(offset = 30,\n                                  inset = 60),\n    resect_head = 2,\n    resect_fins = 2\n  )+\n  geom_point(\n    shape = 21,\n    size = 2.5\n  )+\n  geom_point(\n    aes(x = new_DC ,\n        y = new_DR),\n    alpha = 0.5,\n    shape = 21,\n    size = 2.5\n  )+\n  facet_wrap(.~period,axes = \"all\",\n             axis.labels = \"margins\"\n              )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  scale_x_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  scale_y_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  theme_classic()+\n  theme(\n    strip.background = element_rect(fill = NA, color = NA),\n    strip.text = element_text(face = \"bold\"),\n    legend.position = \"none\",\n    plot.background = element_blank(),\n    panel.spacing = unit(5, \"pt\"),\n    panel.spacing.x = unit(15, \"pt\"),\n    plot.margin = margin(5,15,5,5,\"pt\"),\n    axis.line = element_line(lineend = \"round\"),\n    axis.text = element_text(color = \"black\"),\n    axis.ticks = element_line(color = \"black\")\n  )+\n  coord_cartesian(xlim = c(0,1),\n                  ylim = c(0,1),\n                  clip = \"off\")\n\n\nggsave(filename = here::here(\"output\", \"figures\", \"Fig2_DC_DR.png\"), \n       width = 8, height = 5)",
    "crumbs": [
      "R",
      "07 - DC and DR for each region per time (Figure 2)"
    ]
  },
  {
    "objectID": "R/07_V_scatterplot_Fig2.html#figure-2---scatterplot",
    "href": "R/07_V_scatterplot_Fig2.html#figure-2---scatterplot",
    "title": "07 - DC and DR for each region per time (Figure 2)",
    "section": "",
    "text": "flow_period_region_prop_lag |&gt;\n  dplyr::filter(dplyr::if_all(c(prop_DC, prop_DR, \n                                new_DC, new_DR), \n                              ~ . != 0 | is.na(.))) |&gt; \n  ggplot(aes(x = prop_DC, y = prop_DR, fill = region_type))+\n  geom_hline(yintercept = 0.5, linetype = \"dashed\")+\n  geom_vline(xintercept = 0.5, linetype = \"dashed\")+\n  geom_arrow_segment(\n    aes(x = new_DC, xend = prop_DC,\n        y = new_DR, yend = prop_DR),\n    color = \"grey\",\n    arrow_head = NULL,\n    arrow_mid  = arrow_head_wings(offset = 30,\n                                  inset = 60),\n    resect_head = 2,\n    resect_fins = 2\n  )+\n  geom_point(\n    shape = 21,\n    size = 2.5\n  )+\n  geom_point(\n    aes(x = new_DC ,\n        y = new_DR),\n    alpha = 0.5,\n    shape = 21,\n    size = 2.5\n  )+\n  facet_wrap(.~period,axes = \"all\",\n             axis.labels = \"margins\"\n              )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  scale_x_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  scale_y_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  theme_classic()+\n  theme(\n    strip.background = element_rect(fill = NA, color = NA),\n    strip.text = element_text(face = \"bold\"),\n    legend.position = \"none\",\n    plot.background = element_blank(),\n    panel.spacing = unit(5, \"pt\"),\n    panel.spacing.x = unit(15, \"pt\"),\n    plot.margin = margin(5,15,5,5,\"pt\"),\n    axis.line = element_line(lineend = \"round\"),\n    axis.text = element_text(color = \"black\"),\n    axis.ticks = element_line(color = \"black\")\n  )+\n  coord_cartesian(xlim = c(0,1),\n                  ylim = c(0,1),\n                  clip = \"off\")\n\n\nggsave(filename = here::here(\"output\", \"figures\", \"Fig2_DC_DR.png\"), \n       width = 8, height = 5)",
    "crumbs": [
      "R",
      "07 - DC and DR for each region per time (Figure 2)"
    ]
  },
  {
    "objectID": "R/05_V_chord_diagram_Fig1.html",
    "href": "R/05_V_chord_diagram_Fig1.html",
    "title": "05 - Producing chord diagram (Figure 1)",
    "section": "",
    "text": "Here we produce the chord diagram (Figure 1 in the manuscript)\n\nlibrary(circlize)  #chord diagrams\nlibrary(dplyr)     #data manipulation\nlibrary(glue)      #string interpolation\n\nData used in this script\n\n# Data from 01_C_data_preparation.qmd\nflow_period_region &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"flow_period_region.csv\"))\n\nflow_region &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"flow_region.csv\")) \n\nMapping NBTs flow among regions per time interval of 50 years\n\n# use region abbreviation\nflow_period_region2 &lt;- flow_period_region |&gt; \n  dplyr::mutate(\n    dplyr::across(\n      c(region_type, region_museum),\n      ~dplyr::case_when(\n        . == \"Europe & Central Asia\" ~ \"ECA\",\n        . == \"East Asia & Pacific\" ~ \"EAP\",\n        . == \"North America\" ~ \"NA\",\n        . == \"South Asia\" ~ \"SAR\",\n        . == \"Latin America & Caribbean\" ~ \"LAC\",\n        . == \"Sub-Saharan Africa\" ~ \"SSA\",\n        . == \"Middle East & North Africa\" ~ \"MENA\"\n      )))\n\nflow_region2 &lt;- flow_region |&gt; \n  dplyr::mutate(\n    dplyr::across(\n      c(region_type, region_museum),\n      ~dplyr::case_when(\n        . == \"Europe & Central Asia\" ~ \"ECA\",\n        . == \"East Asia & Pacific\" ~ \"EAP\",\n        . == \"North America\" ~ \"NA\",\n        . == \"South Asia\" ~ \"SAR\",\n        . == \"Latin America & Caribbean\" ~ \"LAC\",\n        . == \"Sub-Saharan Africa\" ~ \"SSA\",\n        . == \"Middle East & North Africa\" ~ \"MENA\"\n      )))\n\n# create dataset for each region\n\nregions_1750 &lt;- flow_period_region2 |&gt; \n  dplyr::filter(period == 1750) |&gt; \n  dplyr::select(-c(period, total_period_region_type)) |&gt; \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |&gt; \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |&gt; \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1800 &lt;- flow_period_region2 |&gt; \n  dplyr::filter(period == 1800) |&gt; \n  dplyr::select(-c(period, total_period_region_type)) |&gt; \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |&gt; \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |&gt; \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1850 &lt;- flow_period_region2 |&gt; \n  dplyr::filter(period == 1850) |&gt; \n  dplyr::select(-c(period, total_period_region_type)) |&gt; \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |&gt; \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |&gt; \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1900 &lt;- flow_period_region2 |&gt; \n  dplyr::filter(period == 1900) |&gt; \n  dplyr::select(-c(period, total_period_region_type)) |&gt; \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |&gt; \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |&gt; \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1950 &lt;- flow_period_region2 |&gt; \n  dplyr::filter(period == 1950) |&gt; \n  dplyr::select(-c(period, total_period_region_type)) |&gt; \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |&gt; \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |&gt; \n  dplyr::filter(\n    value != 0\n  )\n\nregions_2000 &lt;- flow_period_region2 |&gt; \n  dplyr::filter(period == 2000) |&gt; \n  dplyr::select(-c(period, total_period_region_type)) |&gt; \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |&gt; \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |&gt; \n  dplyr::filter(value != 0)\n\nregions_alltime &lt;- flow_region2 |&gt; \n  dplyr::select(-total_region_type) |&gt; \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |&gt; \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |&gt; \n  dplyr::filter(value != 0)\n\n#define colors\ncolors &lt;- c(\" EAP\" = \"#4DBBD5FF\", \n            \" ECA\" = \"#E64B35FF\",\n            \" LAC\" = \"#00A087FF\", \n            \" MENA\" = \"#8491B4FF\",\n            \" NA\" = \"#3C5488FF\", \n            \" SAR\" = \"#B09C85FF\",\n            \" SSA\" = \"#F39B7FFF\",\n            \"EAP \" = \"#4DBBD5FF\", \n            \"ECA \" = \"#E64B35FF\",\n            \"LAC \" = \"#00A087FF\", \n            \"MENA \" = \"#8491B4FF\",\n            \"NA \" = \"#3C5488FF\", \n            \"SAR \" = \"#B09C85FF\",\n            \"SSA \" = \"#F39B7FFF\"\n)\n\nProducing the figures\n\n#start pdf\npdf(here::here(\"output\", \"figures\", \"Fig1.pdf\"), width = 8, height = 8)\n\n#define layout\n# The layout will follow this order\n# 1 4 7\n# 2 5 8\n# 3 6 9\nlayout(matrix(1:9, 3, 3))\n\n#1 - blank space for map\nplot(0, type='n', axes=FALSE, ann=FALSE)\n\n#2 - 1750-1799\nchordDiagram(regions_1750, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1750-1799\")\n\n#3 - 1900-1949\nchordDiagram(regions_1900, \n             grid.col = colors,\n             directional = 1,\n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1900-1949\")\n\n#4 - blank space for map\nplot(0, type='n', axes=FALSE, ann=FALSE)\n\n#5 - 1800-1849\nchordDiagram(regions_1800, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1800-1849\")\n\n#6 - 1950-1999\nchordDiagram(regions_1950, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1950-1999\")\n\n#7 - All time\nchordDiagram(regions_alltime, \n             grid.col = colors,\n             directional = 1,\n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             annotationTrack = \"grid\",\n             reduce = 0.000000000000001,\n             preAllocateTracks = list(track.height = 0.1,\n                                      track.margin = c(0,0)),\n             annotationTrackHeight = mm_h(c(2, 2)),\n             )\n\ncircos.track(track.index = 1, panel.fun = function(x, y) {\n  if(abs(CELL_META$cell.start.degree - CELL_META$cell.end.degree) &gt; 0) {\n    sn = CELL_META$sector.index\n    i_state = as.numeric(gsub(\"(C|R)_\", \"\", sn))\n    circos.text(CELL_META$xcenter, 1, CELL_META$sector.index, \n                facing = \"inside\", niceFacing = TRUE, adj = c(0.5,0))\n    xlim = CELL_META$xlim\n    breaks = seq(0, 10000, by = 1000)\n    circos.axis(\n      major.at = breaks,\n      labels = ifelse(breaks &gt;= 1000, paste0(breaks/1000, \"k\"), breaks),\n      labels.cex = 0.5,\n      h = \"bottom\"\n      )\n  }\n}, bg.border = NA)\n\ntitle(\"All time\")\n\n#8 - 1850-1899\nchordDiagram(regions_1850, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1850-1899\")\n\n#9 - 2000-present\nchordDiagram(regions_2000, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"2000-present\")\n\n#Finish \ndev.off()\ncircos.clear()",
    "crumbs": [
      "R",
      "05 - Producing chord diagram (Figure 1)"
    ]
  },
  {
    "objectID": "R/03_D_data_preparation_models.html",
    "href": "R/03_D_data_preparation_models.html",
    "title": "03 - Data preparation for models",
    "section": "",
    "text": "Here we provided data preparation for generalized linear models performed using the script 04_A_model_NBTs.qmd",
    "crumbs": [
      "R",
      "03 - Data preparation for models"
    ]
  },
  {
    "objectID": "R/03_D_data_preparation_models.html#modelling-number-of-primary-types-per-country",
    "href": "R/03_D_data_preparation_models.html#modelling-number-of-primary-types-per-country",
    "title": "03 - Data preparation for models",
    "section": "Modelling number of primary types per country",
    "text": "Modelling number of primary types per country\nHere we will model the number (counting) of total NBT in each country. Countries with no NBT in their museums and natural history collections are represented with NA. However the absence of primary types are an important information, and consist in a true absence, meaning that these countries host no NBT. So, first we transformed the NA values in type_richness variable to 0. Then we standardized all the predictors to 0 mean and 1 variation unit.\n\ndf_country_complete4 &lt;-\n  df_country_complete3 |&gt;\n  dplyr::ungroup() |&gt;\n  dplyr::mutate(\n    type.richness.pad = ifelse(is.na(type_richness), 0, type_richness),\n    n.museums = ifelse(is.na(n.museums), 0, n.museums)) |&gt;\n  dplyr::select(-type_richness) |&gt;\n  tidyr::drop_na() |&gt;  # removing NAs\n  dplyr::mutate(\n    years.independence = ifelse(yearsSinceIndependence == \"undefined\", 0, yearsSinceIndependence),\n    native.richness.pad = scale(native_richness, center = T, scale = TRUE)[, 1],\n    records.per.area.pad = scale(records_per_area, center = T, scale = T)[, 1],\n    years.independence.pad = scale(as.numeric(years.independence), center = T, scale = T)[, 1],\n    years.independence.fac = ifelse(as.numeric(years.independence) &gt;= 1, 1, 0),\n    gdp.pad = scale(e_migdppc, center = T, scale = T)[, 1],\n    n.museums.pad = scale(n.museums, center = T, scale = T)[, 1],\n    colonization = relevel(as.factor(years.independence.fac), ref = \"0\")\n  )\n\nTransforming turnover metrics (NBT turnover and Native turnover) to fit in the model. Here we transform beta metrics to fit it between zero and one, following Ferrari and Cribari-Neto\n\n# just transforming type and native turnover variable to fit it between zero and one\n\n# First creating a function to transform the data and avoid 0 and 1\n\nstd_beta &lt;- function(x, s){\n  x_std &lt;- (x*((length(x) - 1)) + s)/(length(x))\n  return(x_std)\n}\n\ndf_country_complete5 &lt;-\n  df_country_complete4 |&gt;\n  dplyr::mutate(type.beta.model = std_beta(x = type.beta, s = 0.5),\n                native.beta.model = std_beta(x = native.beta, s = 0.5))\n\nData frame used to model Domestic Contribution (DC) and Domestic Retention (DR)\n\ndf_country_prop &lt;- \n  flow_country |&gt; \n  dplyr::group_by(country_museum) |&gt;\n  dplyr::add_count(name = \"total_country_museum\",\n                  wt = n) |&gt;\n  dplyr::ungroup() |&gt;\n  #add total_world\n  dplyr::add_count(name = \"total_type_world\",\n                   wt = n) |&gt;\n  #filter only the flow to the same country\n  dplyr::filter(country_type == country_museum) |&gt;\n  #rename to domestic_type_retained\n  dplyr::rename(domestic_type_retained = n) |&gt;\n  #add prop_DC, prop_DR, and prop_CW\n  # DC - Domestic Contribution\n  # DR - Domestic Retention\n  # WC - World Contribution\n  dplyr::mutate(\n    prop_DC = domestic_type_retained/total_country_museum,\n    prop_DR = domestic_type_retained/total_country_type,\n    prop_WC = total_country_museum/total_type_world,\n    prop_DC = ifelse(is.na(prop_DC), 0, prop_DC)) |&gt; \n  dplyr::select(-country_museum) |&gt; \n  dplyr::rename(country = country_type) |&gt; \n  dplyr::filter(total_country_type != 0)\n\nJoin the df_country_prop with df_country_biodem5\nAdditionally, create a metric of success and failure for each proportion. These quantities will be later used in the modelling approach\n\ndf_country_complete6 &lt;- \n  df_country_prop |&gt; \n  dplyr::inner_join(df_country_complete5, by = c(\"country\")) |&gt; \n  dplyr::mutate(\n    prop_DC.pad = std_beta(x = prop_DC, s = 0.5), \n    prop_DR.pad = std_beta(x = prop_DR, s = 0.5),\n    success.DC = domestic_type_retained, \n    failures.DC = total_country_museum - domestic_type_retained, \n    success.DR = domestic_type_retained, \n    failures.DR = total_country_type - domestic_type_retained\n    )",
    "crumbs": [
      "R",
      "03 - Data preparation for models"
    ]
  },
  {
    "objectID": "R/02_A_beta-countries.html",
    "href": "R/02_A_beta-countries.html",
    "title": "02 - Analysis of mismatch between country native composition and primary type data",
    "section": "",
    "text": "Reading packages\n\n# data\nlibrary(readr)        # reading CSV files\nlibrary(here)         # constructing file paths\nlibrary(dplyr)        # data manipulation\nlibrary(tidyr)        # data tidying\nlibrary(phyloregion)  # handling phylogenetic data and transformations\n\n\n\nImporting and processing data\nImporting and processing native composition and NBT composition data\n\n# From 01_C_data_preparation.qmd\nspp_native_distribution &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n\n# From 01_C_data_preparation.qmd\nspp_type_distribution &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n\nChecking the specimens with data in both tables (native distribution and types). We transformed the long format species occurrence data frame to dense format. During this procedure we removed 1204 species that do not have information on native distribution (or we couldn’t get this information from CAS)\n\ndf_native_grid &lt;- \n  spp_native_distribution |&gt; \n  dplyr::select(grids = country_distribution, \n                species = species) |&gt; \n  tidyr::drop_na(grids)\n\ndf_type_grid &lt;- \n  spp_type_distribution |&gt; \n  dplyr::select(grids = country_museum, \n                species = species) |&gt; \n  tidyr::drop_na(grids) |&gt; \n  dplyr::mutate(grids = paste(grids, \"type\", sep = \"_\"))\n  \n\n# joining data frames\ndf_all_grid &lt;- rbind(df_native_grid, df_type_grid) # joining both matrices - \n    #native and types composition\n\n#### Just descriptive quantities\ncountry_native &lt;- unique(df_native_grid$grids)\ncountry_type &lt;- gsub(pattern = \"_type\", \n                     replacement = \"\",\n                     unique(df_type_grid$grids))\ncountry_type_zero &lt;- setdiff(country_native, country_type) # countries with no type specimen\n\n# transforming into a sparse matrix to speed up calculations\nsparse_all &lt;- df_all_grid |&gt; \n  phyloregion::long2sparse(grids = \"grids\", species = \"species\") |&gt; \n  phyloregion::sparse2dense()\n\n# Transforming in presence absence matrix\nsparse_all_pa &lt;- ifelse(sparse_all &gt;= 1, 1, 0) \n\n# Binding countries with no types - adding zeroes\ncountry_type_zero_names &lt;- paste(country_type_zero, \"_type\", sep = \"\") # this will be used to bind together matrix with types and add the countries with no type\nmatrix_type_zero &lt;- matrix(0,\n         nrow = length(country_type_zero_names),\n         ncol = ncol(sparse_all_pa), \n         dimnames = list(country_type_zero_names, \n                         colnames(sparse_all_pa)))\n\nsparse_all_pa2 &lt;- rbind(sparse_all_pa, matrix_type_zero)\n\n\n\nCalculating directional turnover based on native and primary type comparison\nHere we calculated the turnover in two directions. One is the turnover of native composition, in other words, the underrepresentation of native fish species in museums and natural collections within the country. Values closer to one indicate that the country present a huge underepresentation of its native fish fauna in primary types located within the country.\nThe other metric is primary type turnover. Values approaching one indicate that there is an overepresentation of primary types maintained in the country when compared to the native fish fauna of that country.\n\nsource(here::here(\"R\", \"functions\", \"function_beta_types.R\"))\nsource(here::here(\"R\", \"functions\", \"function_beta_types_success_fail.R\"))\n\nnames_countries &lt;- unique(df_native_grid$grids) # country names\n\ndf_all_beta &lt;- beta_types(presab = sparse_all_pa2, \n                          names.countries = names_countries) # calculating metrics of directional turnover\n\nreadr::write_csv(df_all_beta, here::here(\"data\", \"processed\", \"df_all_beta.csv\"))"
  },
  {
    "objectID": "R/0011_V_beta_all_FigS3.html",
    "href": "R/0011_V_beta_all_FigS3.html",
    "title": "0011 - Supplementary World map with countries represented by its NBT and native turnover (Figure 3)",
    "section": "",
    "text": "Plotting native and NBT turnover for each country\nLoading packages\n\n#plot\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(cowplot)\n#map\nlibrary(rnaturalearth)\nlibrary(rmapshaper)\nlibrary(sf)\nlibrary(biscale)\n\nData used\n\n# Data from 02_D_beta-countries.qmd\ndf_all_beta &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"df_all_beta.csv\"))\n\nJoining metric information with geographical data\n\ncountries &lt;- rnaturalearth::ne_countries(returnclass = \"sf\")\n\nsf_countries &lt;-\n  sf::st_as_sf(countries) |&gt;\n  dplyr::filter(admin != \"Antarctica\") |&gt;\n  sf::st_transform(crs = \"+proj=moll +x_0=0 +y_0=0 +lat_0=0 +lon_0=0\") |&gt; \n  dplyr::select(iso_a3_eh)\n\ndf_all_beta_sf &lt;-\n  sf_countries |&gt;\n  dplyr::full_join(df_all_beta, by = c(iso_a3_eh = \"countries\"))\n\nFirst processing spatial data to convert NA values into 0\n\ndf_all_beta_sf2 &lt;- \n  df_all_beta_sf |&gt; \n  sf::st_as_sf() |&gt; \n  rmapshaper::ms_filter_islands(min_area = 12391399903) |&gt; \n  dplyr::mutate(\n    type.beta = ifelse(is.na(type.beta), \n                           0, \n                           type.beta),\n    native.beta = ifelse(is.na(native.beta), \n                           0, \n                           native.beta))\n\nCreate palettes\n\npalette_blue &lt;- colorRampPalette(c(\"#d3d3d3\", \"#accaca\", \"#81c1c1\", \"#52b6b6\"))\n\npalette_pink &lt;- colorRampPalette(c(\"#d3d3d3\", \"#c5acc2\", \"#bb84b1\", \"#ac5a9c\"))\n\n\n\nPlotting maps\n\nmap_native_beta &lt;- \n  ggplot() +\n  geom_sf(data = df_all_beta_sf2,\n          aes(geometry = geometry,\n              fill = native.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_pink(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Native\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n\nmap_type_beta &lt;- \n  ggplot() +\n  geom_sf(data = df_all_beta_sf2,\n          aes(geometry = geometry,\n              fill = type.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_blue(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Types\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n\nPlotting the two quantities (native and types turnover) in a bivariate map\n\nsf_bivar_types &lt;-\n  bi_class(df_all_beta_sf2, \n           x = type.beta, \n           y = native.beta, \n           style = \"equal\",\n           dim = 4)\n\nbivar_map_types &lt;- \n  ggplot() +\n  geom_sf(data = sf_bivar_types, \n          aes(geometry = geometry,\n              fill = bi_class), \n          color = \"white\",\n          size = 0.1, \n          show.legend = FALSE) +\n  bi_scale_fill(pal = \"DkBlue2\", \n                dim = 4) +\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_blank(),\n        axis.text = element_blank(),  \n        axis.ticks = element_blank(),\n        axis.line = element_blank(),\n    panel.background = element_rect(fill = NA),\n    plot.background = element_rect(fill = NA)\n  ) \n\nlegend &lt;-\n  bi_legend(pal = \"DkBlue2\",\n            dim = 4,\n            xlab = \"NBT\",\n            ylab = \"Native\",\n            size = )\n\nbivar_map_type_final &lt;- \n  ggdraw() +\n  draw_plot(legend, 0.0, 0.15, 0.25, 0.25) +\n  draw_plot(bivar_map_types, 0, 0, 1, 1)\n\nJoining all the maps\n\nmap_turnover_all &lt;-\n  map_native_beta+map_type_beta+bivar_map_type_final+\n  patchwork::plot_layout(\n    design = \n\"AB\n CC\"\n  )+\n  patchwork::plot_annotation(tag_levels = \"a\")&\n  theme(\n    plot.tag = element_text(face = \"bold\", hjust = 0, vjust = 1),\n    plot.tag.position = c(0, 1),\n  )\n\n\nggsave(here::here(\"output\", \"figures\", \"Fig3_turnover_metrics.png\"),\n       map_turnover_all, dpi=600, width = 10, height = 9)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science",
    "section": "",
    "text": "Note\n\n\n\nThis manuscript is submitted as a preprint here: Link",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science",
    "section": "data",
    "text": "data\nThis folder stores raw and processed data used to perform all the analysis presented in this study\n\nraw\n\nflow_period_region_country.csv a data frame in the long format containing the flowing of NBT per regions per per time (50-year time frame). Variables:\n\nperiod numeric variable representing 50-year time intervals\nregion_type character representing the name of the World Bank region of the country where the NBT was sourced\ncountry_type character. A three letter code (alpha-3 ISO3166) representing the country of the museum where the NBT was sourced\nregion_museum character. Name of the World Bank region of the country where the NBT is housed\ncountry_museum character. A three letter code (alpha-3 ISO3166) representing the country of the museum where the NBT is housed\nn numeric. The number of NBT flowing from one country to another\n\nspp_native_distribution.csv data frame in the long format containing the native composition at the country level. Variables:\n\nspecies character. The name of a species in the format genus_epithet according to the Catalog of Fishes (including synonym names)\ncountry_distribution character. Three letter code (alpha-3 ISO3166) indicating the name of the country where a species is native to\nregion_distribution character. The name of the region acording with World Bank where a species is native to\n\nspp_type_distribution.csv data frame in the long format containing the composition of NBT by country. Variables:\n\nspecies character. The name of a species in the format genus_epithet according to the Catalog of Fishes (including synonym names)\ncountry_distribution character. Three letter code (alpha-3 ISO3166) indicating the name of the country where a species is housed\nregion_distribution character. The name of the region acording with World Bank where a species is housed\n\nbio-dem_data.csv data frame with data downloaded from Bio-Dem containing information on biological and social information at the country level. Variables:\n\ncountry character. A three letter code (alpha-3 ISO3166) representing a country\nrecords numeric. Total number of species occurrence records from Global Biodiverity Facility (GBIF)\nrecords_per_area numeric. Records per area from gbif\nyearsSinceIndependence numeric. Years since independence for each country\ne_migdppc numeric. GDP per capta\n\nmuseum_data.csv data frame with museums’ acronyms and the world region of each. Variables:\n\ncode_museum character. The acronym (three letter code) of the museum\ncountry_museum character. A three letter code (alpha-3 ISO3166) representing a country\nregion_museum character. The name of the region acording with World Bank\n\n\n\n\nprocessed\n\nflow_region.csv a data frame containing flowing of NBT among world regions and the total number of NBT derived from the source region\nflow_period_region.csv a data frame with the number of NBT between the world regions per 50-year time frame and the total number of NBT in each time frame for each world region\nflow_period_region_prop.csv a data frame with the number of NBT, the Domestic Contribution and Domestic Retention between the world regions in a 50-year time frame\nflow_region_prop.csv data with the total number of species flowing between world regions, Domestic Contribution and Domestic Retention\nflow_country.csv data frame with flowing information of NBT among countries\ndf_country_native.csv data frame with the number of native species at the country level\ndf_country_type.csv data frame with the number of NBT at the country level\ndf_all_beta.csv data frame with values of native and NBT turnover at the country level",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#r",
    "href": "index.html#r",
    "title": "The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science",
    "section": "R",
    "text": "R\nThe letters D, A and V represents scripts for, respectively, data processing (D), data analysis (A) and results visualization (V). The script sequence to reproduce the workflow is indicated by the numbers at the beginning of the name of the script file.\n\n\n01_D_data_preparation.qmd initial data preparation\n02_A_beta-countries.qmd analysis of beta diversity metrics. This script is used to calculate turnover NBT and native NBT\n03_D_data_preparation_models.qmd script used to build data frames that will be used in statistical models (04_A_model_NBTs.qmd)\n04_A_model_NBTs.qmd statistical models for the total number of NBT, native and NBT turnover, Domestic Contribution and Domestic Retention\n05_V_chord_diagram_Fig1.qmd code used to produce circular flow diagram. This is the Figure 1 of the study\n06_V_world_map_Fig1.qmd code used to produce the world map in the Figure 1 of the main text\n07_V_scatterplot_Fig2.qmd code used to reproduce the Figure 2 of the main text\n08_V_beta_Fig3.qmd code used to build Figure 3 of the main text\n09_V_model_Fig4.qmd code used to build the Figure 4 of the main text. This is the representation of the results of the models present in the script 04_A_model_NBTs.qmd\n0010_Supplementary_analysis.qmd code to produce all the tables and figures presented in the Supplementary material of this study\n0011_V_beta_all_FigS3.qmd code to produce the Figure S3 in the supplementary material producing a cartogram with countries coloured accoridng to its native and NBT turnover values, considering all species\n\n\nfunctions\n\nfunction_beta_types_success_fail.R function used to calculate turnover metrics.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#output",
    "href": "index.html#output",
    "title": "The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science",
    "section": "output",
    "text": "output\n\nFigures\nIn this folder you will find all figures used in the main text and supplementary material of this study\nFig1_flow_circle_plot.png Figure with circular plots showing the flux of NBT among regions of the world in a 50-year time window\nFig2_DC_DR.png Scaterplot with World regions characterized by their Domestic Contribution and Domestic Retention values in a 50-year time frame\nFig3_turnover_metrics.png Cartogram with 3 maps showing the level of native turnover, NBT turnover and the combination of both metrics in a combined map\nFig4_models.png Figure showing the predictions of the number of NBT, DC, DR, native turnover and NBT turnover for different predictors. This is derived from the statistical models\n\nSupp-material\nThis folder contains the figures in the Supplementary material\n\nFigS1_native_richness.png World map with countries coloured according to the number of native species richness according to the Catalog of Fishes\nFigS2_scatterplot.png All-time Domestic contribution (DC) and Domestic retention (DR) for world regions",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#packages",
    "href": "index.html#packages",
    "title": "The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science",
    "section": "Packages",
    "text": "Packages\n\n\n\nPackage\nVersion\nDocumentation\n\n\n\n\nbbmle\n1.0.25.1\nbbmle\n\n\nbiscale\n1.0.0\nbiscale\n\n\ncirclize\n0.4.15\ncirclize\n\n\ncountrycode\n1.6.0\ncountrycode\n\n\ncowplot\n1.1.1\ncowplot\n\n\nDHARMa\n0.4.6\nDHARMa\n\n\ndplyr\n1.1.4\ndplyr\n\n\nggarrow\n0.0.0.9000\nggarrow\n\n\nggplot2\n3.5.0\nggplot2\n\n\nglmmTMB\n1.1.8\nglmmTMB\n\n\nglue\n1.6.2\nglue\n\n\nhere\n1.0.1\nhere\n\n\npatchwork\n1.2.0.9000\npatchwork\n\n\nperformance\n0.12.1\nperformance\n\n\nphyloregion\n1.0.8\nphyloregion\n\n\nreadr\n2.1.4\nreadr\n\n\nrmapshaper\n0.5.0\nrmapshaper\n\n\nrnaturalearth\n0.3.4\nrnaturalearth\n\n\nscales\n1.3.0.9000*\nscales\n\n\nsf\n1.0-14\nsf\n\n\ntidyr\n1.3.1\ntidyr\n\n\n\n* Developer version",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "R/0010_Supplementary_analysis.html",
    "href": "R/0010_Supplementary_analysis.html",
    "title": "Supplementary material - Figures and Tables",
    "section": "",
    "text": "In this document we provide the code to reproduce the Figures and Tables presented in supplementary material of the manuscript “The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science”\nlibrary(readr) # read csv objects\nlibrary(dplyr) # manipulate tables\nlibrary(ggplot2) # plot figures\nlibrary(scales) # change axis values\nlibrary(countrycode) # download country information",
    "crumbs": [
      "R",
      "Supplementary material - Figures and Tables"
    ]
  },
  {
    "objectID": "R/0010_Supplementary_analysis.html#figure-s1---native-richness",
    "href": "R/0010_Supplementary_analysis.html#figure-s1---native-richness",
    "title": "Supplementary material - Figures and Tables",
    "section": "Figure S1 - Native richness",
    "text": "Figure S1 - Native richness\nNative richness was extracted from the Catalog of Fishes\n\ndf_country_native_sf |&gt;\n  ggplot()+\n  geom_sf(aes(fill = native.richness))+\n  scale_fill_distiller(palette = \"YlGnBu\",\n                       direction = 1,\n                       na.value = \"grey90\",\n                       breaks = c(1, 1000, 2000,3000, 3854))+\n  labs(\n    fill = \"Native richness\"\n  )+\n  guides(fill = guide_colorbar(barwidth = 20))+\n  theme_void()+\n  theme(\n    legend.position = \"top\",\n    legend.title.position = \"top\",\n    legend.title = element_text(hjust = 0.5),\n    plot.background = element_rect(fill = \"white\",\n                                   color = NA)\n  )+\n  coord_sf(\n    crs = \"+proj=moll +x_50=0 +y_0=0 +lat_0=0 +lon_0=0\"\n    )\n\nggsave(here::here(\"output\", \"figures\",\n                  \"Supp-material\", \"FigS1_native_richness.png\"),\n       width = 7, height = 5, dpi = 600)",
    "crumbs": [
      "R",
      "Supplementary material - Figures and Tables"
    ]
  },
  {
    "objectID": "R/0010_Supplementary_analysis.html#figure-s2---scatterplot-of-all-time",
    "href": "R/0010_Supplementary_analysis.html#figure-s2---scatterplot-of-all-time",
    "title": "Supplementary material - Figures and Tables",
    "section": "Figure S2 - Scatterplot of all-time",
    "text": "Figure S2 - Scatterplot of all-time\n\nflow_region_prop |&gt;\n  ggplot(aes(x = prop_DC, y = prop_DR, fill = region_type))+\n  geom_hline(yintercept = 0.5, linetype = \"dashed\")+\n  geom_vline(xintercept = 0.5, linetype = \"dashed\")+\n  geom_point(\n    shape = 21,\n    size = 2.5\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  scale_x_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  scale_y_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  labs(\n    x = \"Domestic Constribution (DC)\",\n    y = \"Domestic Retention (DR)\"\n  )+\n  theme_classic()+\n  theme(\n    strip.background = element_rect(fill = NA, color = NA),\n    strip.text = element_text(face = \"bold\"),\n    legend.position = \"none\",\n    plot.background = element_blank(),\n    panel.spacing = unit(5, \"pt\"),\n    panel.spacing.x = unit(15, \"pt\"),\n    plot.margin = margin(5,15,5,5,\"pt\"),\n    axis.line = element_line(lineend = \"round\"),\n    axis.text = element_text(color = \"black\"),\n    axis.ticks = element_line(color = \"black\")\n  )+\n  coord_cartesian(xlim = c(0,1),\n                  ylim = c(0,1),\n                  clip = \"off\")\n\n# saving image\nggsave(filename = here::here(\"output\", \"figures\", \"Supp-material\", \"FigS2_scatterplot.png\"), \n       width = 3.5, height = 3)",
    "crumbs": [
      "R",
      "Supplementary material - Figures and Tables"
    ]
  },
  {
    "objectID": "R/0010_Supplementary_analysis.html#model-data",
    "href": "R/0010_Supplementary_analysis.html#model-data",
    "title": "Supplementary material - Figures and Tables",
    "section": "Model data",
    "text": "Model data\n\n# Data from 03_C_data_preparation.qmd\ndf_country_complete6 &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\n\n# Data from 04_D_model_NBTs.qmd\nmod_counting_NBT &lt;- readRDS(here::here(\"output\", \n                                       \"models\", \n                                       \"model_res_counting.rds\")) # NBT total countings\nmod_DC &lt;- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dc.rds\"))\nmod_DR &lt;- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dr.rds\"))\nmod_turnover_native &lt;- readRDS(here::here(\"output\", \n                                          \"models\",\n                                      \"model_res_turnover_native.rds\"))\nmod_turnover_nbt &lt;- readRDS(here::here(\"output\", \n                                       \"models\",\n                                       \"model_res_turnover_nbt.rds\"))",
    "crumbs": [
      "R",
      "Supplementary material - Figures and Tables"
    ]
  },
  {
    "objectID": "R/0010_Supplementary_analysis.html#tables-with-estimated-parameters",
    "href": "R/0010_Supplementary_analysis.html#tables-with-estimated-parameters",
    "title": "Supplementary material - Figures and Tables",
    "section": "Tables with estimated parameters",
    "text": "Tables with estimated parameters\nProducing tables with sjPlot\n\nsjPlot::tab_model(mod_counting_NBT, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\", \n                                  \"Dispersion parameter\"), \n                  dv.labels = \"Total Name Bearing Types\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n\n\n# Table for betabinomial model with Domestic contribution\n\nsjPlot::tab_model(mod_DC, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Domestic Contribution\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n\n# Table for betabinomial model with Domestic retention\n\nsjPlot::tab_model(mod_DR, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Domestic Retention\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n# Table for beta model with native turnover \n\nsjPlot::tab_model(mod_turnover_native, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Native turnover\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n# Table for beta model with nbt turnover \n\nsjPlot::tab_model(mod_turnover_nbt, \n                  transform = NULL,\n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"NBT turnover\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")",
    "crumbs": [
      "R",
      "Supplementary material - Figures and Tables"
    ]
  },
  {
    "objectID": "R/0010_Supplementary_analysis.html#diagnostic-graphics",
    "href": "R/0010_Supplementary_analysis.html#diagnostic-graphics",
    "title": "Supplementary material - Figures and Tables",
    "section": "Diagnostic graphics",
    "text": "Diagnostic graphics\n\n# total number of NBT\nDHARMa::simulateResiduals(fittedModel = mod_counting_NBT, plot = T)\n\n# Domestic Contribution and Domestic Retention\nDHARMa::simulateResiduals(fittedModel = mod_DC, plot = TRUE) # DC\nDHARMa::simulateResiduals(fittedModel = mod_DR, plot = TRUE) # DR\n\n# turnover metrics\nDHARMa::simulateResiduals(fittedModel = mod_turnover_native, plot = TRUE)\nDHARMa::simulateResiduals(fittedModel = mod_turnover_nbt, plot = TRUE)",
    "crumbs": [
      "R",
      "Supplementary material - Figures and Tables"
    ]
  },
  {
    "objectID": "R/01_D_data_preparation.html",
    "href": "R/01_D_data_preparation.html",
    "title": "01 - Data preparation",
    "section": "",
    "text": "General overview\nIn this document we provide all the scripts needed to process the main data and later create models and figures.\n\n\nReading libraries, data and basic functions\n\nlibrary(dplyr)   # data manipulation\nlibrary(tidyr)   # data tidying\nlibrary(glue)    # string interpolation\nlibrary(here)    # constructing file paths\nlibrary(readr)   # reading CSV files\n\n# create period of 50 years\nfloor_period = function(value){ return(value - value %% 50) }\n\nData containing NBT (Name Bearing Types) flow. This data frame contains the flow of NBT among countries. The source country of the NBT is represented by its three letter acronym (country_type) and its respective world bank region (region_type). The housing location is represented by three letter code of the country (contry_museum) and its respective world bank region of the museum (region_museum). NBT flowing is represented by 50-year time intervals. The total number of NBT flowing from one region/country to another is represented by the column n. These names and meanings are consistent throughout all data sets\n\n# Flow by each period, region and country\nflow_period_region_country &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"flow_period_region_country.csv\"))\n\n\n\nLoad data\n\n# 1\n\n# Flow by each period - total number of NBT by period\nflow_period &lt;- flow_period_region_country |&gt; \n  dplyr::group_by(period) |&gt; \n  dplyr::count(wt = n) |&gt; \n  dplyr::ungroup() |&gt;\n  dplyr::add_count(name = \"total_period\", wt = n)\n\n# Flow by each region - total number of NBT among regions\nflow_region &lt;- flow_period_region_country |&gt; \n  dplyr::group_by(region_type, region_museum) |&gt; \n  dplyr::count(wt = n) |&gt; \n  dplyr::ungroup() |&gt;\n  dplyr::group_by(region_type) |&gt;\n  dplyr::add_count(name = \"total_region_type\", wt = n) |&gt; \n  dplyr::ungroup()\n\nreadr::write_csv(flow_region, here::here(\"data\",\"processed\", \"flow_region.csv\"))\n\n# Flow among countries\nflow_country &lt;- flow_period_region_country |&gt; \n  dplyr::group_by(country_type, country_museum) |&gt; \n  dplyr::count(wt = n) |&gt; \n  dplyr::ungroup() |&gt;\n  dplyr::group_by(country_type) |&gt;\n  dplyr::add_count(name = \"total_country_type\", wt = n) |&gt; \n  dplyr::ungroup()\n\nreadr::write_csv(flow_country, here::here(\"data\",\"processed\", \"flow_country.csv\"))\n\n\n# 2\n\n# Flow by each period and region - add total from period and region_type\nflow_period_region &lt;- flow_period_region_country |&gt; \n  dplyr::group_by(period, region_type, region_museum) |&gt; \n  dplyr::count(wt = n) |&gt; \n  dplyr::ungroup()|&gt;\n  dplyr::group_by(period, region_type) |&gt;\n  dplyr::add_count(name = \"total_period_region_type\", wt = n) |&gt; \n  dplyr::ungroup()\n\nreadr::write_csv(flow_period_region, here::here(\"data\",\"processed\", \"flow_period_region.csv\"))\n\n# Flow by each region and country - add total from country_type\nflow_region_country &lt;- flow_period_region_country |&gt; \n  dplyr::group_by(region_type, region_museum,\n                  country_type, country_museum) |&gt; \n  dplyr::count(wt = n) |&gt; \n  dplyr::ungroup() |&gt;\n  dplyr::group_by(country_type) |&gt;\n  dplyr::add_count(name = \"total_country_type\", wt = n) |&gt; \n  dplyr::ungroup()\n\n# Proportions\n\n# Flow by each period and region - add proportions\nflow_period_region_prop &lt;- flow_period_region |&gt;\n  # ungroup\n  dplyr::ungroup() |&gt;\n  # group by period and museum region\n  dplyr::group_by(period, region_museum) |&gt;\n  # count how many NBTs were deposited in the museums of this region during the period\n  dplyr::add_count(wt = n, name = \"total_period_region_museum\") |&gt;\n  # ungroup\n  dplyr::ungroup() |&gt;\n  # group by period\n  dplyr::group_by(period) |&gt;\n  # count how many NBTs were described during the period\n  dplyr::add_count(wt = n, name = \"total_period\") |&gt;\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) |&gt;\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_period_region_museum,\n                prop_DR = n/total_period_region_type) |&gt; \n  dplyr::ungroup() |&gt; \n  dplyr::mutate(prop_DC = ifelse(is.na(prop_DC), 0, prop_DC))\n\nreadr::write_csv(flow_period_region_prop, here::here(\"data\",\"processed\", \"flow_period_region_prop.csv\"))\n\n# Flow by each period and region - add proportions\nflow_region_prop &lt;- flow_region |&gt;\n  # ungroup\n  dplyr::ungroup() |&gt;\n  # group by period and museum region\n  dplyr::group_by(region_museum) |&gt;\n  # count how many NBTs were deposited in the museums of this region\n  dplyr::add_count(wt = n, name = \"total_region_museum\") |&gt;\n  # ungroup\n  dplyr::ungroup() |&gt;\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) |&gt;\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_region_museum,\n                prop_DR = n/total_region_type)\n\nreadr::write_csv(flow_region_prop, here::here(\"data\",\"processed\", \"flow_region_prop.csv\"))\n\n\n\nMuseum data\n\nmuseum_data &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"museum_data.csv\"))\n\ninfra_museum &lt;-\n  museum_data |&gt;\n  dplyr::group_by(country_museum) |&gt;\n  dplyr::count(name = \"n.museums\")\n\nreadr::write_csv(infra_museum, here::here(\"data\",\"processed\", \"infra_museum.csv\"))\n\n\n\nNative and Types species by country list\n\n# Native\nspp_native_distribution &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n\ndf_country_native &lt;- spp_native_distribution |&gt;\n  dplyr::group_by(country_distribution, region_distribution) |&gt;\n  dplyr::count(name = \"native.richness\") |&gt;\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_native, here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n\n# Types\nspp_type_distribution &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n\ndf_country_type &lt;- spp_type_distribution |&gt;\n  dplyr::group_by(country_museum, region_museum) |&gt;\n  dplyr::count(name = \"type_richness\") |&gt;\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_type, here::here(\"data\",\"processed\", \"df_country_type.csv\"))\n\n\n\nBio-Dem\nWe downloaded data from Bio-Dem data base and saved them as csv files. Here I read these files that contain information on GDP per capta (e_migdppc), total number of occurrence species records from gbif (records), records per area from gbif (records_per_area), years since independence for each country (yearsSinceIndependence). Country names is represented by iso3c code - an unique three letters code that identify each country.\n\ndf_bio_dem &lt;- readr::read_csv(file = here::here(\"data\", \"raw\", \"bio-dem_data.csv\"))",
    "crumbs": [
      "R",
      "01 - Data preparation"
    ]
  },
  {
    "objectID": "R/02_A_beta-endemics-countries.html",
    "href": "R/02_A_beta-endemics-countries.html",
    "title": "02 - Turnover with endemic species",
    "section": "",
    "text": "Overview\nHere we process the data on species native distribution filtering by species with only one occurrence of native distribution per country. This was done in order to reduce the effects of species with large distribution ranges in the the metrics of native turnover and NBT turnover\n\n\nPackages\n\nlibrary(readr)        # reading CSV files\nlibrary(here)         # constructing file paths\nlibrary(dplyr)        # data manipulation\nlibrary(tidyr)        # data tidying\n\n\n\nData\n\n# From 01_C_data_preparation.qmd\nspp_native_distribution &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n\n# From 01_C_data_preparation.qmd\nspp_type_distribution &lt;- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n\n\n\nData processing\nFiltering data to keep only species with one occurrence records in native distribution\n\nspp_endemic_native &lt;- \n  spp_native_distribution |&gt; \n  group_by(species) |&gt;\n  add_count(name = \"n.species\") |&gt; \n  filter(n.species == 1) |&gt; \n  ungroup() |&gt; \n  group_by(country_distribution) |&gt; \n  add_count(name = \"n.endemics.country\")\n\ndf_native_endemic_grid &lt;- \n  spp_endemic_native |&gt; \n  dplyr::select(grids = country_distribution, \n                species) |&gt; \n  tidyr::drop_na(grids)\n\ndf_type_grid &lt;- \n  spp_type_distribution |&gt; \n  dplyr::select(grids = country_museum, \n                species) |&gt; \n  tidyr::drop_na(grids) |&gt;\n  dplyr::mutate(grids = paste(grids, \"type\", sep = \"_\"))\n  \n\n# joining data frames\ndf_all_grid &lt;- rbind(df_native_endemic_grid, df_type_grid) # joining both matrices - \n    #native and types composition\n\n\n#### Just descriptive quantities\ncountry_native_endemic &lt;- unique(df_native_endemic_grid$grids)\ncountry_type &lt;- gsub(pattern = \"_type\", \n                     replacement = \"\",\n                     unique(df_type_grid$grids))\ncountry_type_zero &lt;- setdiff(country_native_endemic, country_type) # countries with no type specimen\n\n# transforming into a sparse matrix to speed up calculations\nsparse_all &lt;- \n  df_all_grid |&gt; \n  phyloregion::long2sparse(grids = \"grids\", species = \"species\") |&gt; \n  phyloregion::sparse2dense()\n\n# Transforming in presence absence matrix\nsparse_all_pa &lt;- ifelse(sparse_all &gt;= 1, 1, 0) \n\n# Binding countries with no types - adding zeroes\ncountry_type_zero_names &lt;- paste(country_type_zero, \"_type\", sep = \"\") # this will be used to bind together matrix with types and add the countries with no type\nmatrix_type_zero &lt;- matrix(0,\n         nrow = length(country_type_zero_names),\n         ncol = ncol(sparse_all_pa), \n         dimnames = list(country_type_zero_names, \n                         colnames(sparse_all_pa)))\n\nsparse_all_pa2 &lt;- rbind(sparse_all_pa, matrix_type_zero)\n\n \n\nsparse_all_pa3 &lt;- \n  sparse_all_pa2[, colnames(sparse_all_pa2) %in% spp_endemic_native$species]\n\n\nsource(here::here(\"R\", \"functions\", \"function_beta_types.R\"))\nsource(here::here(\"R\", \"functions\", \"function_beta_types_success_fail.R\"))\n# names_countries &lt;- unique(df_native_endemic_grid$grids) # country names\nnames_countries &lt;- \n  unique(gsub(pattern = \"_type\", \n              replacement = \"\",\n              c(unique(df_native_endemic_grid$grids), df_type_grid$grids)))\ndf_endemic_beta &lt;- beta_types(presab = sparse_all_pa3, \n                          names.countries = names_countries)\n\n\n# calculating metrics\n\nreadr::write_csv(df_endemic_beta, here::here(\"data\", \"processed\", \"df_endemic_beta.csv\"))",
    "crumbs": [
      "R",
      "02 - Turnover with endemic species"
    ]
  },
  {
    "objectID": "R/04_A_model_NBTs.html",
    "href": "R/04_A_model_NBTs.html",
    "title": "04 - Modelling different aspects of countries regarding NBT characteristics",
    "section": "",
    "text": "Here we provided the code used to model the total number of NBT, Domestic Contribution (DC), Domestic Retention (DR), Native turnover and NBT turnover. These models are represented in Figures 4 in the main text, Figure S3 and S4, and tables S1, S2 and S3 in Supplementary material.",
    "crumbs": [
      "R",
      "04 - Modelling different aspects of countries regarding NBT characteristics"
    ]
  },
  {
    "objectID": "R/04_A_model_NBTs.html#total-number-of-nbt-by-country",
    "href": "R/04_A_model_NBTs.html#total-number-of-nbt-by-country",
    "title": "04 - Modelling different aspects of countries regarding NBT characteristics",
    "section": "Total number of NBT by country",
    "text": "Total number of NBT by country\nAfter standardize the variables we can fit the models. Since we have a huge amount of zeroes in our response variable we will use a zero-inflation poisson model and also test with a poisson distribution.\n\nggplot(df_country_complete6, aes(type.richness.pad)) +\n  geom_density(alpha = 0.4, fill = \"darkorange\")\n\nFitting different models to check which one is the most appropriate\n\nmod_pois &lt;-\n  glmmTMB::glmmTMB(type.richness.pad ~ native.richness.pad + \n                     records.per.area.pad + years.independence.pad + \n                     gdp.pad + n.museums.pad, zi = ~., \n                   data = df_country_complete6, \n                   family = poisson) # poisson\n\nmod_zero_pois &lt;-\n  glmmTMB::glmmTMB(type.richness.pad ~ native.richness.pad + \n                     records.per.area.pad + years.independence.pad + \n                     gdp.pad + n.museums.pad, zi = ~., \n                   data = df_country_complete6, \n                   family = glmmTMB::nbinom2) # negative binomial\n\nmod_hurdle &lt;-\n  glmmTMB::glmmTMB(type.richness.pad ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad,\n                   zi = ~.,\n                   data = df_country_complete6,\n                   family = glmmTMB::truncated_nbinom2)\n\nsummary(mod_hurdle)\nperformance::check_zeroinflation(mod_hurdle)\nsummary(mod_zero_pois)\nperformance::check_zeroinflation(mod_zero_pois)\n\n## model selection\nbbmle::ICtab(mod_pois, mod_zero_pois, mod_hurdle)\n\n# checking homocedasticity \nDHARMa::simulateResiduals(fittedModel = mod_zero_pois, plot = T)\nDHARMa::simulateResiduals(fittedModel = mod_hurdle, plot = T)\n\nperformance::check_collinearity(mod_zero_pois)\n# Exporting best model\n\nsaveRDS(mod_zero_pois, here::here(\"output\", \"models\", \"model_res_counting.rds\"))",
    "crumbs": [
      "R",
      "04 - Modelling different aspects of countries regarding NBT characteristics"
    ]
  },
  {
    "objectID": "R/04_A_model_NBTs.html#modelling-native-and-nbt-turnover",
    "href": "R/04_A_model_NBTs.html#modelling-native-and-nbt-turnover",
    "title": "04 - Modelling different aspects of countries regarding NBT characteristics",
    "section": "Modelling native and NBT turnover",
    "text": "Modelling native and NBT turnover\nIn this section we will model the two turnover metrics that represent the deficit of native species in biological collections of a given country and the overrepresentation of primary types regarding the native fish fauna of a given country. These variables are native.beta and type.beta.\n\nmod_native_turnover &lt;-\n  glmmTMB::glmmTMB(cbind(native.success, native.fail) ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad, \n                   family = glmmTMB::betabinomial,\n                   data = df_country_complete6)\n\n\nmod_type_turnover &lt;-\n  glmmTMB::glmmTMB(cbind(type.success, type.fail) ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad, \n                   family = glmmTMB::betabinomial,\n                   data = df_country_complete6)\n\n\n## Diagnose plots\nsummary(mod_native_turnover)\nsummary(mod_type_turnover)\n\nDHARMa::simulateResiduals(fittedModel = mod_native_turnover, plot = TRUE)\nDHARMa::simulateResiduals(fittedModel = mod_type_turnover, plot = TRUE)\nperformance::check_collinearity(mod_native_turnover)\nperformance::check_collinearity(mod_type_turnover)\n\n# Saving models\n\nsaveRDS(mod_native_turnover, here::here(\"output\", \"models\", \"model_res_turnover_native.rds\"))\nsaveRDS(mod_type_turnover, here::here(\"output\", \"models\", \"model_res_turnover_nbt.rds\"))",
    "crumbs": [
      "R",
      "04 - Modelling different aspects of countries regarding NBT characteristics"
    ]
  },
  {
    "objectID": "R/04_A_model_NBTs.html#modelling-country-characteristics-based-on-biological-collections-domestic-contribution-and-domestic-retention",
    "href": "R/04_A_model_NBTs.html#modelling-country-characteristics-based-on-biological-collections-domestic-contribution-and-domestic-retention",
    "title": "04 - Modelling different aspects of countries regarding NBT characteristics",
    "section": "Modelling country characteristics based on biological collections (Domestic Contribution and Domestic Retention)",
    "text": "Modelling country characteristics based on biological collections (Domestic Contribution and Domestic Retention)\nModel with a binomial distribution with success and failures using the raw data used to calculate Domestic Contribution (DC) and Domestic Retention (DR)\n\nmod_beta_dc_binom &lt;-\n  glmmTMB::glmmTMB(cbind(success.DC, failures.DC) ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad,\n                   family = glmmTMB::betabinomial, \n                   data = df_country_complete6)\n\nDHARMa::simulateResiduals(fittedModel = mod_beta_dc_binom, plot = TRUE)\nsummary(mod_beta_dc_binom)\n\n\nmod_beta_dr_binom &lt;-\n  glmmTMB::glmmTMB(cbind(success.DR, failures.DR) ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad, ziformula = ~., \n                   family = glmmTMB::betabinomial, \n                   data = df_country_complete6)\n\nDHARMa::simulateResiduals(fittedModel = mod_beta_dr_binom, \n                          plot = TRUE)\nsummary(mod_beta_dr_binom)\nperformance::check_collinearity(mod_beta_dr_binom)\n\n# saving results\nsaveRDS(mod_beta_dc_binom, \n        here::here(\"output\", \"models\", \"model_res_dc.rds\"))\nsaveRDS(mod_beta_dr_binom, \n        here::here(\"output\", \"models\", \"model_res_dr.rds\"))",
    "crumbs": [
      "R",
      "04 - Modelling different aspects of countries regarding NBT characteristics"
    ]
  },
  {
    "objectID": "R/06_V_world_map_Fig1.html",
    "href": "R/06_V_world_map_Fig1.html",
    "title": "06 - Creating World Map with World Bank regions (Figure 1)",
    "section": "",
    "text": "Create world map with WorldBank regions\nThis map was created to bind it together with the Figure 1 containing circle plots. The full plot was created using inkscape.\nLoad packages\n\n# data\nlibrary(rnaturalearth) # Get natural earth data\nlibrary(dplyr)         # Data manipulation\n\n# spatial\nlibrary(sf)            # Spatial data manipulation\nlibrary(rmapshaper)    # Simplify and filter shapes\n\n# plot\nlibrary(ggplot2)       # Data visualization\n\nGet data to create world map\n\nsf::sf_use_s2(FALSE)\n\nworld_wb &lt;- rnaturalearth::ne_countries(scale = \"small\",\n                                        returnclass = \"sf\") |&gt;\n  dplyr::filter(region_wb != \"Antarctica\")|&gt;\n  dplyr::group_by(region_wb) |&gt;\n  dplyr::summarize(geometry = sf::st_union(geometry)) |&gt;\n  rmapshaper::ms_filter_islands(min_area = 20000000000) |&gt;\n  rmapshaper::ms_simplify(keep = 0.95)\n\ncountries &lt;- rnaturalearth::ne_countries(scale = \"small\",\n                                         returnclass = \"sf\") |&gt;\n  dplyr::filter(region_wb != \"Antarctica\")|&gt;\n  rmapshaper::ms_filter_islands(min_area = 20000000000) |&gt;\n  rmapshaper::ms_simplify(keep = 0.95)\n\nworld_wb2 &lt;- world_wb |&gt;\n    mutate(\n      region_wb = dplyr::case_when(\n      region_wb == \"East Asia & Pacific\" ~ \"EAP\",\n      region_wb == \"Europe & Central Asia\" ~ \"ECA\",\n      region_wb == \"Latin America & Caribbean\" ~ \"LAC\",\n      region_wb == \"Middle East & North Africa\" ~ \"MENA\",\n      region_wb == \"South Asia\" ~ \"SAR\",\n      region_wb == \"Sub-Saharan Africa\" ~ \"SSA\",\n      region_wb == \"North America\" ~ \"NA\"),\n      region_wb = factor(region_wb,\n                         levels = c(\n                           \"NA\", \"LAC\", \"ECA\",\n                           \"MENA\", \"SSA\", \"SAR\", \"EAP\"\n                            )))\n\nPlot\n\nworld_wb2 |&gt; \n  ggplot() +\n  geom_sf(aes(fill = region_wb),\n          color = NA)+\n  geom_sf(data = countries,\n  fill = NA,\n  color = \"white\")+\n  scale_fill_manual(\n    values = c(\n      \"ECA\" = \"#E64B35\",\n      \"EAP\" = \"#4DBBD5\",\n      \"NA\" = \"#3C5488\",\n      \"SAR\" = \"#B09C85\",\n      \"LAC\" = \"#00A087\",\n      \"SSA\" = \"#F39B7F\",\n      \"MENA\" = \"#8491B4\"\n    )\n  )+\n  guides(\n    fill = guide_legend(nrow = 1)\n  )+\n  theme(\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"white\",\n     color = NA),\n    panel.background = element_rect(fill = \"white\",\n    color = NA),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    legend.position = \"bottom\",\n    legend.title = element_blank()\n  )+\n  coord_sf(\n    crs = \"+proj=moll +x_50=0 +y_0=0 +lat_0=0 +lon_0=0\"\n    )\n\nggsave(here::here(\"output\", \"figures\", \"worldmap.png\"),\n       width = 7, height = 5, dpi = 600)",
    "crumbs": [
      "R",
      "06 - Creating World Map with World Bank regions (Figure 1)"
    ]
  },
  {
    "objectID": "R/08_V_beta_endemics_Fig3.html",
    "href": "R/08_V_beta_endemics_Fig3.html",
    "title": "08 - World map with countries represented by its NBT and native turnover for endemic species",
    "section": "",
    "text": "Plotting native and NBT turnover for endemic species for each country\nLoading packages\n\n#plot\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(cowplot)\n#map\nlibrary(rnaturalearth)\nlibrary(rmapshaper)\nlibrary(sf)\nlibrary(biscale)\n\nData used\n\n# Data from 02_D_beta-countries.qmd\ndf_endemic_beta &lt;- readr::read_csv(here::here(\"data\", \"processed\", \"df_endemic_beta.csv\"))\n\nJoining metric information with geographical data\n\ncountries &lt;- rnaturalearth::ne_countries(returnclass = \"sf\")\n\nsf_countries &lt;-\n  sf::st_as_sf(countries) |&gt;\n  dplyr::filter(admin != \"Antarctica\") |&gt;\n  sf::st_transform(crs = \"+proj=moll +x_0=0 +y_0=0 +lat_0=0 +lon_0=0\") |&gt; \n  dplyr::select(iso_a3_eh)\n\ndf_endemic_beta_sf &lt;-\n  sf_countries |&gt;\n  dplyr::full_join(df_endemic_beta, by = c(iso_a3_eh = \"countries\"))\n\nFirst processing spatial data to convert NA values into 0\n\ndf_endemic_beta_sf2 &lt;- \n  df_endemic_beta_sf |&gt; \n  sf::st_as_sf() |&gt; \n  rmapshaper::ms_filter_islands(min_area = 12391399903) |&gt; \n  dplyr::mutate(\n    type.beta = ifelse(is.na(type.beta), \n                           0, \n                           type.beta),\n    native.beta = ifelse(is.na(native.beta), \n                           0, \n                           native.beta))\n\nCreate palettes\n\npalette_blue &lt;- colorRampPalette(c(\"#d3d3d3\", \"#accaca\", \"#81c1c1\", \"#52b6b6\"))\n\npalette_pink &lt;- colorRampPalette(c(\"#d3d3d3\", \"#c5acc2\", \"#bb84b1\", \"#ac5a9c\"))\n\n\n\nPlotting maps\n\nmap_native_endemic_beta &lt;- \n  ggplot() +\n  geom_sf(data = df_endemic_beta_sf2,\n          aes(geometry = geometry,\n              fill = native.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_pink(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Native\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n\nmap_type_endemic_beta &lt;- \n  ggplot() +\n  geom_sf(data = df_endemic_beta_sf2,\n          aes(geometry = geometry,\n              fill = type.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_blue(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Types\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n\nPlotting the two quantities (native and types turnover) in a bivariate map\n\nsf_bivar_types_endemic &lt;-\n  bi_class(df_endemic_beta_sf2, \n           x = type.beta, \n           y = native.beta, \n           style = \"equal\",\n           dim = 4)\n\nbivar_map_types_endemic &lt;- \n  ggplot() +\n  geom_sf(data = sf_bivar_types_endemic, \n          aes(geometry = geometry,\n              fill = bi_class), \n          color = \"white\",\n          size = 0.1, \n          show.legend = FALSE) +\n  bi_scale_fill(pal = \"DkBlue2\", \n                dim = 4) +\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_blank(),\n        axis.text = element_blank(),  \n        axis.ticks = element_blank(),\n        axis.line = element_blank(),\n    panel.background = element_rect(fill = NA),\n    plot.background = element_rect(fill = NA)\n  ) \n\nlegend &lt;-\n  bi_legend(pal = \"DkBlue2\",\n            dim = 4,\n            xlab = \"NBT\",\n            ylab = \"Native\",\n            size = )\n\nbivar_map_type_final_endemic &lt;- \n  ggdraw() +\n  draw_plot(legend, 0.0, 0.15, 0.25, 0.25) +\n  draw_plot(bivar_map_types_endemic, 0, 0, 1, 1)\n\nJoining all the maps\n\nmap_turnover_endemic &lt;-\n  map_native_endemic_beta+map_type_endemic_beta+bivar_map_type_final_endemic+\n  patchwork::plot_layout(\n    design = \n\"AB\n CC\"\n  )+\n  patchwork::plot_annotation(tag_levels = \"a\")&\n  theme(\n    plot.tag = element_text(face = \"bold\", hjust = 0, vjust = 1),\n    plot.tag.position = c(0, 1),\n  )\n\n\nggsave(here::here(\"output\", \"figures\", \"Fig3_turnover_metrics_endemics.png\"),\n       map_turnover_endemic, dpi=600, width = 10, height = 9)",
    "crumbs": [
      "R",
      "08 - World map with countries represented by its NBT and native turnover for endemic species"
    ]
  }
]