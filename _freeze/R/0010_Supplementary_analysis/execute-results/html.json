{
  "hash": "30193ad8ef53eb5997ef4b8a1adba1a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Supplementary material - Figures and Tables\"\nsubtitle: \"0010_Supplementary_analysis.qmd\"\nformat: html\neval: false\n---\n\n\nIn this document we provide the code to reproduce the Figures and Tables presented in supplementary material of the manuscript **\"The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science\"**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr) # read csv objects\nlibrary(dplyr) # manipulate tables\nlibrary(ggplot2) # plot figures\nlibrary(scales) # change axis values\nlibrary(countrycode) # download country information\n```\n:::\n\n\n# Native species richness\n\nWe calculate the native species richness for each country from data in the Catalog of Fishes. We used this source to avoid taxonomic mismatches between species names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 01_C_data_preparation.qmd\ndf_country_native <- readr::read_csv(file = here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- \n  rnaturalearth::ne_countries(scale = \"medium\",\n                                         returnclass = \"sf\") |>\n  dplyr::filter(region_wb != \"Antarctica\")|>\n  rmapshaper::ms_filter_islands(min_area = 20000000000) |>\n  rmapshaper::ms_simplify(keep = 0.95)\n\nsf_countries <-\n  sf::st_as_sf(countries) |>\n  dplyr::filter(admin != \"Antarctica\") |> \n  dplyr::select(iso_a3)\n\ndf_country_native_sf <-\n  sf_countries |>\n  dplyr::full_join(df_country_native, \n                   by = c(iso_a3 = \"country_distribution\"))\n```\n:::\n\n\n## Figure S1 - Native richness\n\nNative richness was extracted from the Catalog of Fishes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_country_native_sf |>\n  ggplot()+\n  geom_sf(aes(fill = native.richness))+\n  scale_fill_distiller(palette = \"YlGnBu\",\n                       direction = 1,\n                       na.value = \"grey90\",\n                       breaks = c(1, 1000, 2000,3000, 3854))+\n  labs(\n    fill = \"Native richness\"\n  )+\n  guides(fill = guide_colorbar(barwidth = 20))+\n  theme_void()+\n  theme(\n    legend.position = \"top\",\n    legend.title.position = \"top\",\n    legend.title = element_text(hjust = 0.5),\n    plot.background = element_rect(fill = \"white\",\n                                   color = NA)\n  )+\n  coord_sf(\n    crs = \"+proj=moll +x_50=0 +y_0=0 +lat_0=0 +lon_0=0\"\n    )\n\nggsave(here::here(\"output\", \"figures\",\n                  \"Supp-material\", \"FigS1_native_richness.png\"),\n       width = 7, height = 5, dpi = 600)\n```\n:::\n\n\n# All time Domestic Contribution (DC) and Domestic Retention (DR)\n\nHere we provided all time values of DR and DC for each region. We used the same data from Figure 2 of the main text, but pulling together all the data \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 01_C_data_preparation.qmd\nflow_region_prop <- readr::read_csv(file = here::here(\"data\", \"processed\", \"flow_region_prop.csv\"))\n```\n:::\n\n\n## Figure S2 - Scatterplot of all-time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_region_prop |>\n  ggplot(aes(x = prop_DC, y = prop_DR, fill = region_type))+\n  geom_hline(yintercept = 0.5, linetype = \"dashed\")+\n  geom_vline(xintercept = 0.5, linetype = \"dashed\")+\n  geom_point(\n    shape = 21,\n    size = 2.5\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  scale_x_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  scale_y_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  labs(\n    x = \"Domestic Constribution (DC)\",\n    y = \"Domestic Retention (DR)\"\n  )+\n  theme_classic()+\n  theme(\n    strip.background = element_rect(fill = NA, color = NA),\n    strip.text = element_text(face = \"bold\"),\n    legend.position = \"none\",\n    plot.background = element_blank(),\n    panel.spacing = unit(5, \"pt\"),\n    panel.spacing.x = unit(15, \"pt\"),\n    plot.margin = margin(5,15,5,5,\"pt\"),\n    axis.line = element_line(lineend = \"round\"),\n    axis.text = element_text(color = \"black\"),\n    axis.ticks = element_line(color = \"black\")\n  )+\n  coord_cartesian(xlim = c(0,1),\n                  ylim = c(0,1),\n                  clip = \"off\")\n\n# saving image\nggsave(filename = here::here(\"output\", \"figures\", \"Supp-material\", \"FigS2_scatterplot.png\"), \n       width = 3.5, height = 3)\n```\n:::\n\n\n# Plotting native and NBT turnover for each country\n\nIn this section we present the cartogram of world map with values of native and \n    NBT turnover using the full dataset of native species (Figure S4)\n\nLoading packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(cowplot)\n#map\nlibrary(rnaturalearth)\nlibrary(rmapshaper)\nlibrary(sf)\nlibrary(biscale)\n```\n:::\n\n\nData used\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 02_D_beta-countries.qmd\ndf_all_beta <- readr::read_csv(here::here(\"data\", \"processed\", \"df_all_beta.csv\"))\n```\n:::\n\n\nJoining metric information with geographical data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- rnaturalearth::ne_countries(returnclass = \"sf\")\n\nsf_countries <-\n  sf::st_as_sf(countries) |>\n  dplyr::filter(admin != \"Antarctica\") |>\n  sf::st_transform(crs = \"+proj=moll +x_0=0 +y_0=0 +lat_0=0 +lon_0=0\") |> \n  dplyr::select(iso_a3_eh)\n\ndf_all_beta_sf <-\n  sf_countries |>\n  dplyr::full_join(df_all_beta, by = c(iso_a3_eh = \"countries\"))\n```\n:::\n\n\nFirst processing spatial data to convert NA values into 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_beta_sf2 <- \n  df_all_beta_sf |> \n  sf::st_as_sf() |> \n  rmapshaper::ms_filter_islands(min_area = 12391399903) |> \n  dplyr::mutate(\n    type.beta = ifelse(is.na(type.beta), \n                           0, \n                           type.beta),\n    native.beta = ifelse(is.na(native.beta), \n                           0, \n                           native.beta))\n```\n:::\n\n\nCreate palettes\n\n\n::: {.cell}\n\n```{.r .cell-code}\npalette_blue <- colorRampPalette(c(\"#d3d3d3\", \"#accaca\", \"#81c1c1\", \"#52b6b6\"))\n\npalette_pink <- colorRampPalette(c(\"#d3d3d3\", \"#c5acc2\", \"#bb84b1\", \"#ac5a9c\"))\n```\n:::\n\n\n# Plotting maps\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_native_beta <- \n  ggplot() +\n  geom_sf(data = df_all_beta_sf2,\n          aes(geometry = geometry,\n              fill = native.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_pink(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Native\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n\nmap_type_beta <- \n  ggplot() +\n  geom_sf(data = df_all_beta_sf2,\n          aes(geometry = geometry,\n              fill = type.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_blue(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Types\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n```\n:::\n\n\nPlotting the two quantities (native and types turnover) in a bivariate map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_bivar_types <-\n  bi_class(df_all_beta_sf2, \n           x = type.beta, \n           y = native.beta, \n           style = \"equal\",\n           dim = 4)\n\nbivar_map_types <- \n  ggplot() +\n  geom_sf(data = sf_bivar_types, \n          aes(geometry = geometry,\n              fill = bi_class), \n          color = \"white\",\n          size = 0.1, \n          show.legend = FALSE) +\n  bi_scale_fill(pal = \"DkBlue2\", \n                dim = 4) +\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_blank(),\n        axis.text = element_blank(),  \n        axis.ticks = element_blank(),\n        axis.line = element_blank(),\n    panel.background = element_rect(fill = NA),\n    plot.background = element_rect(fill = NA)\n  ) \n\nlegend <-\n  bi_legend(pal = \"DkBlue2\",\n            dim = 4,\n            xlab = \"NBT\",\n            ylab = \"Native\",\n            size = )\n\nbivar_map_type_final <- \n  ggdraw() +\n  draw_plot(legend, 0.0, 0.15, 0.25, 0.25) +\n  draw_plot(bivar_map_types, 0, 0, 1, 1)\n```\n:::\n\n\nJoining all the maps \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_turnover_all <-\n  map_native_beta+map_type_beta+bivar_map_type_final+\n  patchwork::plot_layout(\n    design = \n\"AB\n CC\"\n  )+\n  patchwork::plot_annotation(tag_levels = \"a\")&\n  theme(\n    plot.tag = element_text(face = \"bold\", hjust = 0, vjust = 1),\n    plot.tag.position = c(0, 1),\n  )\n\n\nggsave(here::here(\"output\", \"figures\", \"FigS4_turnover_metrics.png\"),\n       map_turnover_all, dpi=600, width = 10, height = 9)\n```\n:::\n\n\n# Comparison between full dataset and endemic dataset\n\nWe performed correlations between Native and NBT turnover calculated using\n    the endemic dataset and the full dataset of native species\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_endemic_beta <- readr::read_csv(here::here(\"data\", \"processed\", \"df_endemic_beta.csv\"))\n\ndf_endemic_beta2 <- \n  df_endemic_beta |> \n  drop_na(type.beta) \ndf_all_beta_sf2 <- \n  df_all_beta_sf |> \n  drop_na(type.beta) \n\ndf_cor <- \n  df_endemic_beta2 |> \n  left_join(df_all_beta_sf2, by = c(countries = \"iso_a3_eh\")) \n\ncor(df_cor$type.beta.x, df_cor$type.beta.y)\ncor(df_cor$native.beta.x, df_cor$native.beta.y)\n```\n:::\n\n\n\n# Model results \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sjPlot)    # creating summary tables of model results\nlibrary(glmmTMB)   # read model output objects\nlibrary(DHARMa)    # diagnostic graphics of models\nlibrary(here)      # constructing file paths\n```\n:::\n\n\nWe provide here the detailed results from all models used in the main text of the manuscript. \n\n## Model data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 03_C_data_preparation.qmd\ndf_country_complete6 <- readr::read_csv(here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\n\n# Data from 04_D_model_NBTs.qmd\nmod_counting_NBT <- readRDS(here::here(\"output\", \n                                       \"models\", \n                                       \"model_res_counting.rds\")) # NBT total countings\nmod_DC <- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dc.rds\"))\nmod_DR <- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dr.rds\"))\nmod_turnover_native <- readRDS(here::here(\"output\", \n                                          \"models\",\n                                      \"model_res_turnover_native.rds\"))\nmod_turnover_nbt <- readRDS(here::here(\"output\", \n                                       \"models\",\n                                       \"model_res_turnover_nbt.rds\"))\n```\n:::\n\n\n## Tables with estimated parameters\n\nProducing tables with sjPlot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsjPlot::tab_model(mod_counting_NBT, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\", \n                                  \"Dispersion parameter\"), \n                  dv.labels = \"Total Name Bearing Types\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n\n\n# Table for betabinomial model with Domestic contribution\n\nsjPlot::tab_model(mod_DC, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Domestic Contribution\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n\n# Table for betabinomial model with Domestic retention\n\nsjPlot::tab_model(mod_DR, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Domestic Retention\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n# Table for beta model with native turnover \n\nsjPlot::tab_model(mod_turnover_native, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Native turnover\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n# Table for beta model with nbt turnover \n\nsjPlot::tab_model(mod_turnover_nbt, \n                  transform = NULL,\n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"NBT turnover\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n```\n:::\n\n\n## Diagnostic graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# total number of NBT\nDHARMa::simulateResiduals(fittedModel = mod_counting_NBT, plot = T)\n\n# Domestic Contribution and Domestic Retention\nDHARMa::simulateResiduals(fittedModel = mod_DC, plot = TRUE) # DC\nDHARMa::simulateResiduals(fittedModel = mod_DR, plot = TRUE) # DR\n\n# turnover metrics\nDHARMa::simulateResiduals(fittedModel = mod_turnover_native, plot = TRUE)\nDHARMa::simulateResiduals(fittedModel = mod_turnover_nbt, plot = TRUE)\n```\n:::\n",
    "supporting": [
      "0010_Supplementary_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}