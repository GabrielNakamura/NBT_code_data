{
  "hash": "c7e3399dbb7d72e408fe3009546845a7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"02 - Turnover with endemic species\"\nsubtitle: \"02_A_beta-endemics-countries.qmd\"\nformat: html\neval: true\n---\n\n\n# Overview\n\nHere we process the data on species native distribution filtering by species with only one occurrence of native distribution per country. This was done in order to reduce the effects of species with large distribution ranges in the the metrics of native turnover and NBT turnover\n    \n# Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)        # reading CSV files\nlibrary(here)         # constructing file paths\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at C:/Users/gabri/OneDrive/Manuscritos/NBT_code_data\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)        # data manipulation\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nOs seguintes objetos são mascarados por 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nOs seguintes objetos são mascarados por 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)        # data tidying\n```\n:::\n\n\n\n# Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# From 01_C_data_preparation.qmd\nspp_native_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 24886 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, country_distribution, region_distribution\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# From 01_C_data_preparation.qmd\nspp_type_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 20246 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, country_museum, region_museum\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n# Data processing\n\nFiltering data to keep only species with one occurrence records in native\n   distribution\n   \n\n::: {.cell}\n\n```{.r .cell-code}\nspp_endemic_native <- \n  spp_native_distribution |> \n  group_by(species) |>\n  add_count(name = \"n.species\") |> \n  filter(n.species == 1) |> \n  ungroup() |> \n  group_by(country_distribution) |> \n  add_count(name = \"n.endemics.country\")\n\ndf_native_endemic_grid <- \n  spp_endemic_native |> \n  dplyr::select(grids = country_distribution, \n                species) |> \n  tidyr::drop_na(grids)\n\ndf_type_grid <- \n  spp_type_distribution |> \n  dplyr::select(grids = country_museum, \n                species) |> \n  tidyr::drop_na(grids) |>\n  dplyr::mutate(grids = paste(grids, \"type\", sep = \"_\"))\n  \n\n# joining data frames\ndf_all_grid <- rbind(df_native_endemic_grid, df_type_grid) # joining both matrices - \n    #native and types composition\n\n\n#### Just descriptive quantities\ncountry_native_endemic <- unique(df_native_endemic_grid$grids)\ncountry_type <- gsub(pattern = \"_type\", \n                     replacement = \"\",\n                     unique(df_type_grid$grids))\ncountry_type_zero <- setdiff(country_native_endemic, country_type) # countries with no type specimen\n\n# transforming into a sparse matrix to speed up calculations\nsparse_all <- \n  df_all_grid |> \n  phyloregion::long2sparse(grids = \"grids\", species = \"species\") |> \n  phyloregion::sparse2dense()\n\n# Transforming in presence absence matrix\nsparse_all_pa <- ifelse(sparse_all >= 1, 1, 0) \n\n# Binding countries with no types - adding zeroes\ncountry_type_zero_names <- paste(country_type_zero, \"_type\", sep = \"\") # this will be used to bind together matrix with types and add the countries with no type\nmatrix_type_zero <- matrix(0,\n         nrow = length(country_type_zero_names),\n         ncol = ncol(sparse_all_pa), \n         dimnames = list(country_type_zero_names, \n                         colnames(sparse_all_pa)))\n\nsparse_all_pa2 <- rbind(sparse_all_pa, matrix_type_zero)\n\n \n\nsparse_all_pa3 <- \n  sparse_all_pa2[, colnames(sparse_all_pa2) %in% spp_endemic_native$species]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"R\", \"functions\", \"function_beta_types_success_fail.R\"))\n# names_countries <- unique(df_native_endemic_grid$grids) # country names\nnames_countries <- \n  unique(gsub(pattern = \"_type\", \n              replacement = \"\",\n              c(unique(df_native_endemic_grid$grids), df_type_grid$grids)))\ndf_endemic_beta <- beta_types(presab = sparse_all_pa3, \n                          names.countries = names_countries)\n\n\n# calculating metrics\n\nreadr::write_csv(df_endemic_beta, here::here(\"data\", \"processed\", \"df_endemic_beta.csv\"))\n```\n:::\n",
    "supporting": [
      "02_A_beta-endemics-countries_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}