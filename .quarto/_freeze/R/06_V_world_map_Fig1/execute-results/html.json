{
  "hash": "d2f5f89ab86bdf0b8d32b7ffc7ec3749",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"06 - Creating World Map with World Bank regions (Figure 1)\"\nsubtitle: \"06_V_world_map_Fig1.qmd\"\nformat: html\neval: false\n---\n\n\n# Create world map with WorldBank regions\n\nThis map was created to bind it together with the Figure 1 containing circle plots.\n    The full plot was created using inkscape.\n\nLoad packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data\nlibrary(rnaturalearth) # Get natural earth data\nlibrary(dplyr)         # Data manipulation\n\n# spatial\nlibrary(sf)            # Spatial data manipulation\nlibrary(rmapshaper)    # Simplify and filter shapes\n\n# plot\nlibrary(ggplot2)       # Data visualization\n```\n:::\n\n\nGet data to create world map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::sf_use_s2(FALSE)\n\nworld_wb <- rnaturalearth::ne_countries(scale = \"small\",\n                                        returnclass = \"sf\") |>\n  dplyr::filter(region_wb != \"Antarctica\")|>\n  dplyr::group_by(region_wb) |>\n  dplyr::summarize(geometry = sf::st_union(geometry)) |>\n  rmapshaper::ms_filter_islands(min_area = 20000000000) |>\n  rmapshaper::ms_simplify(keep = 0.95)\n\ncountries <- rnaturalearth::ne_countries(scale = \"small\",\n                                         returnclass = \"sf\") |>\n  dplyr::filter(region_wb != \"Antarctica\")|>\n  rmapshaper::ms_filter_islands(min_area = 20000000000) |>\n  rmapshaper::ms_simplify(keep = 0.95)\n\nworld_wb2 <- world_wb |>\n    mutate(\n      region_wb = dplyr::case_when(\n      region_wb == \"East Asia & Pacific\" ~ \"EAP\",\n      region_wb == \"Europe & Central Asia\" ~ \"ECA\",\n      region_wb == \"Latin America & Caribbean\" ~ \"LAC\",\n      region_wb == \"Middle East & North Africa\" ~ \"MENA\",\n      region_wb == \"South Asia\" ~ \"SAR\",\n      region_wb == \"Sub-Saharan Africa\" ~ \"SSA\",\n      region_wb == \"North America\" ~ \"NA\"),\n      region_wb = factor(region_wb,\n                         levels = c(\n                           \"NA\", \"LAC\", \"ECA\",\n                           \"MENA\", \"SSA\", \"SAR\", \"EAP\"\n                            )))\n```\n:::\n\n\nPlot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld_wb2 |> \n  ggplot() +\n  geom_sf(aes(fill = region_wb),\n          color = NA)+\n  geom_sf(data = countries,\n  fill = NA,\n  color = \"white\")+\n  scale_fill_manual(\n    values = c(\n      \"ECA\" = \"#E64B35\",\n      \"EAP\" = \"#4DBBD5\",\n      \"NA\" = \"#3C5488\",\n      \"SAR\" = \"#B09C85\",\n      \"LAC\" = \"#00A087\",\n      \"SSA\" = \"#F39B7F\",\n      \"MENA\" = \"#8491B4\"\n    )\n  )+\n  guides(\n    fill = guide_legend(nrow = 1)\n  )+\n  theme(\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"white\",\n     color = NA),\n    panel.background = element_rect(fill = \"white\",\n    color = NA),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    legend.position = \"bottom\",\n    legend.title = element_blank()\n  )+\n  coord_sf(\n    crs = \"+proj=moll +x_50=0 +y_0=0 +lat_0=0 +lon_0=0\"\n    )\n\nggsave(here::here(\"output\", \"figures\", \"worldmap.png\"),\n       width = 7, height = 5, dpi = 600)\n```\n:::",
    "supporting": [
      "06_V_world_map_Fig1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}