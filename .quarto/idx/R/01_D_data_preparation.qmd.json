{"title":"01 - Data preparation","markdown":{"yaml":{"title":"01 - Data preparation","format":"html","eval":false},"headingText":"General overview","containsRefs":false,"markdown":"\n\n\nIn this document we provide all the scripts needed to process the main data and\n    later create models and figures.\n\n# Reading libraries, data and basic functions\n\n```{r}\nlibrary(dplyr)   # data manipulation\nlibrary(tidyr)   # data tidying\nlibrary(glue)    # string interpolation\nlibrary(here)    # constructing file paths\nlibrary(readr)   # reading CSV files\n\n# create period of 50 years\nfloor_period = function(value){ return(value - value %% 50) }\n```\n\nData containing NBT (Name Bearing Types) flow. This data frame contains the flow of NBT\n    among countries. The source country of the NBT is represented by its three \n    letter acronym (country_type) and its respective world bank region (region_type). \n    The housing location is represented by three letter code of the country (contry_museum) and its \n    respective world bank region of the museum (region_museum).\n    NBT flowing is represented by 50-year time intervals. The total number of \n    NBT flowing from one region/country to another is represented by the column\n    n. These names and meanings are consistent throughout all data sets\n\n```{r}\n# Flow by each period, region and country\nflow_period_region_country <- readr::read_csv(here::here(\"data\", \"raw\", \"flow_period_region_country.csv\"))\n```\n\n# Load data\n\n```{r}\n# 1\n\n# Flow by each period - total number of NBT by period\nflow_period <- flow_period_region_country |> \n  dplyr::group_by(period) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::add_count(name = \"total_period\", wt = n)\n\n# Flow by each region - total number of NBT among regions\nflow_region <- flow_period_region_country |> \n  dplyr::group_by(region_type, region_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::group_by(region_type) |>\n  dplyr::add_count(name = \"total_region_type\", wt = n) |> \n  dplyr::ungroup()\n\nreadr::write_csv(flow_region, here::here(\"data\",\"processed\", \"flow_region.csv\"))\n\n# Flow among countries\nflow_country <- flow_period_region_country |> \n  dplyr::group_by(country_type, country_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::group_by(country_type) |>\n  dplyr::add_count(name = \"total_country_type\", wt = n) |> \n  dplyr::ungroup()\n\nreadr::write_csv(flow_country, here::here(\"data\",\"processed\", \"flow_country.csv\"))\n\n\n# 2\n\n# Flow by each period and region - add total from period and region_type\nflow_period_region <- flow_period_region_country |> \n  dplyr::group_by(period, region_type, region_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup()|>\n  dplyr::group_by(period, region_type) |>\n  dplyr::add_count(name = \"total_period_region_type\", wt = n) |> \n  dplyr::ungroup()\n\nreadr::write_csv(flow_period_region, here::here(\"data\",\"processed\", \"flow_period_region.csv\"))\n\n# Flow by each region and country - add total from country_type\nflow_region_country <- flow_period_region_country |> \n  dplyr::group_by(region_type, region_museum,\n                  country_type, country_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::group_by(country_type) |>\n  dplyr::add_count(name = \"total_country_type\", wt = n) |> \n  dplyr::ungroup()\n\n# Proportions\n\n# Flow by each period and region - add proportions\nflow_period_region_prop <- flow_period_region |>\n  # ungroup\n  dplyr::ungroup() |>\n  # group by period and museum region\n  dplyr::group_by(period, region_museum) |>\n  # count how many NBTs were deposited in the museums of this region during the period\n  dplyr::add_count(wt = n, name = \"total_period_region_museum\") |>\n  # ungroup\n  dplyr::ungroup() |>\n  # group by period\n  dplyr::group_by(period) |>\n  # count how many NBTs were described during the period\n  dplyr::add_count(wt = n, name = \"total_period\") |>\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) |>\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_period_region_museum,\n                prop_DR = n/total_period_region_type) |> \n  dplyr::ungroup() |> \n  dplyr::mutate(prop_DC = ifelse(is.na(prop_DC), 0, prop_DC))\n\nreadr::write_csv(flow_period_region_prop, here::here(\"data\",\"processed\", \"flow_period_region_prop.csv\"))\n\n# Flow by each period and region - add proportions\nflow_region_prop <- flow_region |>\n  # ungroup\n  dplyr::ungroup() |>\n  # group by period and museum region\n  dplyr::group_by(region_museum) |>\n  # count how many NBTs were deposited in the museums of this region\n  dplyr::add_count(wt = n, name = \"total_region_museum\") |>\n  # ungroup\n  dplyr::ungroup() |>\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) |>\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_region_museum,\n                prop_DR = n/total_region_type)\n\nreadr::write_csv(flow_region_prop, here::here(\"data\",\"processed\", \"flow_region_prop.csv\"))\n```\n\n# Museum data\n\n```{r}\nmuseum_data <- readr::read_csv(here::here(\"data\", \"raw\", \"museum_data.csv\"))\n\ninfra_museum <-\n  museum_data |>\n  dplyr::group_by(country_museum) |>\n  dplyr::count(name = \"n.museums\")\n\nreadr::write_csv(infra_museum, here::here(\"data\",\"processed\", \"infra_museum.csv\"))\n```\n\n# Native and Types species by country list\n\n```{r}\n# Native\nspp_native_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n\ndf_country_native <- spp_native_distribution |>\n  dplyr::group_by(country_distribution, region_distribution) |>\n  dplyr::count(name = \"native.richness\") |>\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_native, here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n\n# Types\nspp_type_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n\ndf_country_type <- spp_type_distribution |>\n  dplyr::group_by(country_museum, region_museum) |>\n  dplyr::count(name = \"type_richness\") |>\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_type, here::here(\"data\",\"processed\", \"df_country_type.csv\"))\n\n```\n\n# Bio-Dem\n\nWe downloaded data from [Bio-Dem](https://bio-dem.surge.sh/#awards) data base and saved them as csv files. Here I read these files that contain information on GDP per capta (e_migdppc), total number of occurrence species records from gbif (records), records per area from gbif (records_per_area), years since independence for each country (yearsSinceIndependence). Country names is represented by iso3c code - an unique three letters code that identify each country.\n\n```{r}\ndf_bio_dem <- readr::read_csv(file = here::here(\"data\", \"raw\", \"bio-dem_data.csv\"))\n```\n","srcMarkdownNoYaml":"\n\n# General overview\n\nIn this document we provide all the scripts needed to process the main data and\n    later create models and figures.\n\n# Reading libraries, data and basic functions\n\n```{r}\nlibrary(dplyr)   # data manipulation\nlibrary(tidyr)   # data tidying\nlibrary(glue)    # string interpolation\nlibrary(here)    # constructing file paths\nlibrary(readr)   # reading CSV files\n\n# create period of 50 years\nfloor_period = function(value){ return(value - value %% 50) }\n```\n\nData containing NBT (Name Bearing Types) flow. This data frame contains the flow of NBT\n    among countries. The source country of the NBT is represented by its three \n    letter acronym (country_type) and its respective world bank region (region_type). \n    The housing location is represented by three letter code of the country (contry_museum) and its \n    respective world bank region of the museum (region_museum).\n    NBT flowing is represented by 50-year time intervals. The total number of \n    NBT flowing from one region/country to another is represented by the column\n    n. These names and meanings are consistent throughout all data sets\n\n```{r}\n# Flow by each period, region and country\nflow_period_region_country <- readr::read_csv(here::here(\"data\", \"raw\", \"flow_period_region_country.csv\"))\n```\n\n# Load data\n\n```{r}\n# 1\n\n# Flow by each period - total number of NBT by period\nflow_period <- flow_period_region_country |> \n  dplyr::group_by(period) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::add_count(name = \"total_period\", wt = n)\n\n# Flow by each region - total number of NBT among regions\nflow_region <- flow_period_region_country |> \n  dplyr::group_by(region_type, region_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::group_by(region_type) |>\n  dplyr::add_count(name = \"total_region_type\", wt = n) |> \n  dplyr::ungroup()\n\nreadr::write_csv(flow_region, here::here(\"data\",\"processed\", \"flow_region.csv\"))\n\n# Flow among countries\nflow_country <- flow_period_region_country |> \n  dplyr::group_by(country_type, country_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::group_by(country_type) |>\n  dplyr::add_count(name = \"total_country_type\", wt = n) |> \n  dplyr::ungroup()\n\nreadr::write_csv(flow_country, here::here(\"data\",\"processed\", \"flow_country.csv\"))\n\n\n# 2\n\n# Flow by each period and region - add total from period and region_type\nflow_period_region <- flow_period_region_country |> \n  dplyr::group_by(period, region_type, region_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup()|>\n  dplyr::group_by(period, region_type) |>\n  dplyr::add_count(name = \"total_period_region_type\", wt = n) |> \n  dplyr::ungroup()\n\nreadr::write_csv(flow_period_region, here::here(\"data\",\"processed\", \"flow_period_region.csv\"))\n\n# Flow by each region and country - add total from country_type\nflow_region_country <- flow_period_region_country |> \n  dplyr::group_by(region_type, region_museum,\n                  country_type, country_museum) |> \n  dplyr::count(wt = n) |> \n  dplyr::ungroup() |>\n  dplyr::group_by(country_type) |>\n  dplyr::add_count(name = \"total_country_type\", wt = n) |> \n  dplyr::ungroup()\n\n# Proportions\n\n# Flow by each period and region - add proportions\nflow_period_region_prop <- flow_period_region |>\n  # ungroup\n  dplyr::ungroup() |>\n  # group by period and museum region\n  dplyr::group_by(period, region_museum) |>\n  # count how many NBTs were deposited in the museums of this region during the period\n  dplyr::add_count(wt = n, name = \"total_period_region_museum\") |>\n  # ungroup\n  dplyr::ungroup() |>\n  # group by period\n  dplyr::group_by(period) |>\n  # count how many NBTs were described during the period\n  dplyr::add_count(wt = n, name = \"total_period\") |>\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) |>\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_period_region_museum,\n                prop_DR = n/total_period_region_type) |> \n  dplyr::ungroup() |> \n  dplyr::mutate(prop_DC = ifelse(is.na(prop_DC), 0, prop_DC))\n\nreadr::write_csv(flow_period_region_prop, here::here(\"data\",\"processed\", \"flow_period_region_prop.csv\"))\n\n# Flow by each period and region - add proportions\nflow_region_prop <- flow_region |>\n  # ungroup\n  dplyr::ungroup() |>\n  # group by period and museum region\n  dplyr::group_by(region_museum) |>\n  # count how many NBTs were deposited in the museums of this region\n  dplyr::add_count(wt = n, name = \"total_region_museum\") |>\n  # ungroup\n  dplyr::ungroup() |>\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) |>\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_region_museum,\n                prop_DR = n/total_region_type)\n\nreadr::write_csv(flow_region_prop, here::here(\"data\",\"processed\", \"flow_region_prop.csv\"))\n```\n\n# Museum data\n\n```{r}\nmuseum_data <- readr::read_csv(here::here(\"data\", \"raw\", \"museum_data.csv\"))\n\ninfra_museum <-\n  museum_data |>\n  dplyr::group_by(country_museum) |>\n  dplyr::count(name = \"n.museums\")\n\nreadr::write_csv(infra_museum, here::here(\"data\",\"processed\", \"infra_museum.csv\"))\n```\n\n# Native and Types species by country list\n\n```{r}\n# Native\nspp_native_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n\ndf_country_native <- spp_native_distribution |>\n  dplyr::group_by(country_distribution, region_distribution) |>\n  dplyr::count(name = \"native.richness\") |>\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_native, here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n\n# Types\nspp_type_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n\ndf_country_type <- spp_type_distribution |>\n  dplyr::group_by(country_museum, region_museum) |>\n  dplyr::count(name = \"type_richness\") |>\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_type, here::here(\"data\",\"processed\", \"df_country_type.csv\"))\n\n```\n\n# Bio-Dem\n\nWe downloaded data from [Bio-Dem](https://bio-dem.surge.sh/#awards) data base and saved them as csv files. Here I read these files that contain information on GDP per capta (e_migdppc), total number of occurrence species records from gbif (records), records per area from gbif (records_per_area), years since independence for each country (yearsSinceIndependence). Country names is represented by iso3c code - an unique three letters code that identify each country.\n\n```{r}\ndf_bio_dem <- readr::read_csv(file = here::here(\"data\", \"raw\", \"bio-dem_data.csv\"))\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"01_D_data_preparation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","theme":"cosmo","code-links":[{"text":"Source Code","icon":"file-code","href":"https://github.com/GabrielNakamura/NBT_code_data"}],"title":"01 - Data preparation"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}