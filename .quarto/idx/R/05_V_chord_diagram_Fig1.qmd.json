{"title":"05 - Producing chord diagram (Figure 1)","markdown":{"yaml":{"title":"05 - Producing chord diagram (Figure 1)","format":"html","eval":false},"headingText":"Data from 01_C_data_preparation.qmd","containsRefs":false,"markdown":"\n\nHere we produce the chord diagram (Figure 1 in the manuscript)\n\n```{r}\nlibrary(circlize)  #chord diagrams\nlibrary(dplyr)     #data manipulation\nlibrary(glue)      #string interpolation\n```\n\nData used in this script\n\n```{r}\nflow_period_region <- readr::read_csv(here::here(\"data\", \"processed\", \"flow_period_region.csv\"))\n\nflow_region <- readr::read_csv(here::here(\"data\", \"processed\", \"flow_region.csv\")) \n```\n\nMapping NBTs flow among regions per time interval of 50 years\n\n```{r}\n# use region abbreviation\nflow_period_region2 <- flow_period_region |> \n  dplyr::mutate(\n    dplyr::across(\n      c(region_type, region_museum),\n      ~dplyr::case_when(\n        . == \"Europe & Central Asia\" ~ \"ECA\",\n        . == \"East Asia & Pacific\" ~ \"EAP\",\n        . == \"North America\" ~ \"NA\",\n        . == \"South Asia\" ~ \"SAR\",\n        . == \"Latin America & Caribbean\" ~ \"LAC\",\n        . == \"Sub-Saharan Africa\" ~ \"SSA\",\n        . == \"Middle East & North Africa\" ~ \"MENA\"\n      )))\n\nflow_region2 <- flow_region |> \n  dplyr::mutate(\n    dplyr::across(\n      c(region_type, region_museum),\n      ~dplyr::case_when(\n        . == \"Europe & Central Asia\" ~ \"ECA\",\n        . == \"East Asia & Pacific\" ~ \"EAP\",\n        . == \"North America\" ~ \"NA\",\n        . == \"South Asia\" ~ \"SAR\",\n        . == \"Latin America & Caribbean\" ~ \"LAC\",\n        . == \"Sub-Saharan Africa\" ~ \"SSA\",\n        . == \"Middle East & North Africa\" ~ \"MENA\"\n      )))\n\n# create dataset for each region\n\nregions_1750 <- flow_period_region2 |> \n  dplyr::filter(period == 1750) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1800 <- flow_period_region2 |> \n  dplyr::filter(period == 1800) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1850 <- flow_period_region2 |> \n  dplyr::filter(period == 1850) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1900 <- flow_period_region2 |> \n  dplyr::filter(period == 1900) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1950 <- flow_period_region2 |> \n  dplyr::filter(period == 1950) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_2000 <- flow_period_region2 |> \n  dplyr::filter(period == 2000) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(value != 0)\n\nregions_alltime <- flow_region2 |> \n  dplyr::select(-total_region_type) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(value != 0)\n\n#define colors\ncolors <- c(\" EAP\" = \"#4DBBD5FF\", \n            \" ECA\" = \"#E64B35FF\",\n            \" LAC\" = \"#00A087FF\", \n            \" MENA\" = \"#8491B4FF\",\n            \" NA\" = \"#3C5488FF\", \n            \" SAR\" = \"#B09C85FF\",\n            \" SSA\" = \"#F39B7FFF\",\n            \"EAP \" = \"#4DBBD5FF\", \n            \"ECA \" = \"#E64B35FF\",\n            \"LAC \" = \"#00A087FF\", \n            \"MENA \" = \"#8491B4FF\",\n            \"NA \" = \"#3C5488FF\", \n            \"SAR \" = \"#B09C85FF\",\n            \"SSA \" = \"#F39B7FFF\"\n)\n```\n\nProducing the figures\n\n```{r}\n#start pdf\npdf(here::here(\"output\", \"figures\", \"Fig1.pdf\"), width = 8, height = 8)\n\n#define layout\n# The layout will follow this order\n# 1 4 7\n# 2 5 8\n# 3 6 9\nlayout(matrix(1:9, 3, 3))\n\n#1 - blank space for map\nplot(0, type='n', axes=FALSE, ann=FALSE)\n\n#2 - 1750-1799\nchordDiagram(regions_1750, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1750-1799\")\n\n#3 - 1900-1949\nchordDiagram(regions_1900, \n             grid.col = colors,\n             directional = 1,\n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1900-1949\")\n\n#4 - blank space for map\nplot(0, type='n', axes=FALSE, ann=FALSE)\n\n#5 - 1800-1849\nchordDiagram(regions_1800, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1800-1849\")\n\n#6 - 1950-1999\nchordDiagram(regions_1950, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1950-1999\")\n\n#7 - All time\nchordDiagram(regions_alltime, \n             grid.col = colors,\n             directional = 1,\n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             annotationTrack = \"grid\",\n             reduce = 0.000000000000001,\n             preAllocateTracks = list(track.height = 0.1,\n                                      track.margin = c(0,0)),\n             annotationTrackHeight = mm_h(c(2, 2)),\n             )\n\ncircos.track(track.index = 1, panel.fun = function(x, y) {\n  if(abs(CELL_META$cell.start.degree - CELL_META$cell.end.degree) > 0) {\n    sn = CELL_META$sector.index\n    i_state = as.numeric(gsub(\"(C|R)_\", \"\", sn))\n    circos.text(CELL_META$xcenter, 1, CELL_META$sector.index, \n                facing = \"inside\", niceFacing = TRUE, adj = c(0.5,0))\n    xlim = CELL_META$xlim\n    breaks = seq(0, 10000, by = 1000)\n    circos.axis(\n      major.at = breaks,\n      labels = ifelse(breaks >= 1000, paste0(breaks/1000, \"k\"), breaks),\n      labels.cex = 0.5,\n      h = \"bottom\"\n      )\n  }\n}, bg.border = NA)\n\ntitle(\"All time\")\n\n#8 - 1850-1899\nchordDiagram(regions_1850, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1850-1899\")\n\n#9 - 2000-present\nchordDiagram(regions_2000, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"2000-present\")\n\n#Finish \ndev.off()\ncircos.clear()\n```\n","srcMarkdownNoYaml":"\n\nHere we produce the chord diagram (Figure 1 in the manuscript)\n\n```{r}\nlibrary(circlize)  #chord diagrams\nlibrary(dplyr)     #data manipulation\nlibrary(glue)      #string interpolation\n```\n\nData used in this script\n\n```{r}\n# Data from 01_C_data_preparation.qmd\nflow_period_region <- readr::read_csv(here::here(\"data\", \"processed\", \"flow_period_region.csv\"))\n\nflow_region <- readr::read_csv(here::here(\"data\", \"processed\", \"flow_region.csv\")) \n```\n\nMapping NBTs flow among regions per time interval of 50 years\n\n```{r}\n# use region abbreviation\nflow_period_region2 <- flow_period_region |> \n  dplyr::mutate(\n    dplyr::across(\n      c(region_type, region_museum),\n      ~dplyr::case_when(\n        . == \"Europe & Central Asia\" ~ \"ECA\",\n        . == \"East Asia & Pacific\" ~ \"EAP\",\n        . == \"North America\" ~ \"NA\",\n        . == \"South Asia\" ~ \"SAR\",\n        . == \"Latin America & Caribbean\" ~ \"LAC\",\n        . == \"Sub-Saharan Africa\" ~ \"SSA\",\n        . == \"Middle East & North Africa\" ~ \"MENA\"\n      )))\n\nflow_region2 <- flow_region |> \n  dplyr::mutate(\n    dplyr::across(\n      c(region_type, region_museum),\n      ~dplyr::case_when(\n        . == \"Europe & Central Asia\" ~ \"ECA\",\n        . == \"East Asia & Pacific\" ~ \"EAP\",\n        . == \"North America\" ~ \"NA\",\n        . == \"South Asia\" ~ \"SAR\",\n        . == \"Latin America & Caribbean\" ~ \"LAC\",\n        . == \"Sub-Saharan Africa\" ~ \"SSA\",\n        . == \"Middle East & North Africa\" ~ \"MENA\"\n      )))\n\n# create dataset for each region\n\nregions_1750 <- flow_period_region2 |> \n  dplyr::filter(period == 1750) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1800 <- flow_period_region2 |> \n  dplyr::filter(period == 1800) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1850 <- flow_period_region2 |> \n  dplyr::filter(period == 1850) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1900 <- flow_period_region2 |> \n  dplyr::filter(period == 1900) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_1950 <- flow_period_region2 |> \n  dplyr::filter(period == 1950) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(\n    value != 0\n  )\n\nregions_2000 <- flow_period_region2 |> \n  dplyr::filter(period == 2000) |> \n  dplyr::select(-c(period, total_period_region_type)) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(value != 0)\n\nregions_alltime <- flow_region2 |> \n  dplyr::select(-total_region_type) |> \n  dplyr::mutate(\n    region_type = glue::glue(\" {region_type}\"),\n    region_museum = glue::glue(\"{region_museum} \")) |> \n  dplyr::rename(\n    from = region_type,\n    to = region_museum,\n    value = n) |> \n  dplyr::filter(value != 0)\n\n#define colors\ncolors <- c(\" EAP\" = \"#4DBBD5FF\", \n            \" ECA\" = \"#E64B35FF\",\n            \" LAC\" = \"#00A087FF\", \n            \" MENA\" = \"#8491B4FF\",\n            \" NA\" = \"#3C5488FF\", \n            \" SAR\" = \"#B09C85FF\",\n            \" SSA\" = \"#F39B7FFF\",\n            \"EAP \" = \"#4DBBD5FF\", \n            \"ECA \" = \"#E64B35FF\",\n            \"LAC \" = \"#00A087FF\", \n            \"MENA \" = \"#8491B4FF\",\n            \"NA \" = \"#3C5488FF\", \n            \"SAR \" = \"#B09C85FF\",\n            \"SSA \" = \"#F39B7FFF\"\n)\n```\n\nProducing the figures\n\n```{r}\n#start pdf\npdf(here::here(\"output\", \"figures\", \"Fig1.pdf\"), width = 8, height = 8)\n\n#define layout\n# The layout will follow this order\n# 1 4 7\n# 2 5 8\n# 3 6 9\nlayout(matrix(1:9, 3, 3))\n\n#1 - blank space for map\nplot(0, type='n', axes=FALSE, ann=FALSE)\n\n#2 - 1750-1799\nchordDiagram(regions_1750, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1750-1799\")\n\n#3 - 1900-1949\nchordDiagram(regions_1900, \n             grid.col = colors,\n             directional = 1,\n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1900-1949\")\n\n#4 - blank space for map\nplot(0, type='n', axes=FALSE, ann=FALSE)\n\n#5 - 1800-1849\nchordDiagram(regions_1800, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1800-1849\")\n\n#6 - 1950-1999\nchordDiagram(regions_1950, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1950-1999\")\n\n#7 - All time\nchordDiagram(regions_alltime, \n             grid.col = colors,\n             directional = 1,\n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             annotationTrack = \"grid\",\n             reduce = 0.000000000000001,\n             preAllocateTracks = list(track.height = 0.1,\n                                      track.margin = c(0,0)),\n             annotationTrackHeight = mm_h(c(2, 2)),\n             )\n\ncircos.track(track.index = 1, panel.fun = function(x, y) {\n  if(abs(CELL_META$cell.start.degree - CELL_META$cell.end.degree) > 0) {\n    sn = CELL_META$sector.index\n    i_state = as.numeric(gsub(\"(C|R)_\", \"\", sn))\n    circos.text(CELL_META$xcenter, 1, CELL_META$sector.index, \n                facing = \"inside\", niceFacing = TRUE, adj = c(0.5,0))\n    xlim = CELL_META$xlim\n    breaks = seq(0, 10000, by = 1000)\n    circos.axis(\n      major.at = breaks,\n      labels = ifelse(breaks >= 1000, paste0(breaks/1000, \"k\"), breaks),\n      labels.cex = 0.5,\n      h = \"bottom\"\n      )\n  }\n}, bg.border = NA)\n\ntitle(\"All time\")\n\n#8 - 1850-1899\nchordDiagram(regions_1850, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"1850-1899\")\n\n#9 - 2000-present\nchordDiagram(regions_2000, \n             grid.col = colors,\n             directional = 1, \n             direction.type = c(\"arrows\"),\n             link.arr.type = \"big.arrow\",\n             reduce = 0.000000000000001,\n)\ntitle(\"2000-present\")\n\n#Finish \ndev.off()\ncircos.clear()\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"05_V_chord_diagram_Fig1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","theme":"cosmo","code-links":[{"text":"Source Code","icon":"file-code","href":"https://github.com/GabrielNakamura/NBT_code_data"}],"title":"05 - Producing chord diagram (Figure 1)"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}