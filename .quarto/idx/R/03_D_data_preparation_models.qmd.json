{"title":"03 Data preparation for models","markdown":{"yaml":{"title":"03 Data preparation for models","format":"html","eval":false},"headingText":"General overview","containsRefs":false,"markdown":"\n\n\nHere we provided data preparation for generalized linear models performed using \n    the script `04_A_model_NBTs.qmd`\n\n# Reading libraries and data\n\n```{r}\nlibrary(dplyr)       # data manipulation\nlibrary(tidyr)       # data tidying\nlibrary(here)        # file path management\nlibrary(readr)       # reading and writing CSV files\nlibrary(countrycode) # country and region codes\n```\n\n# Load data\n\n```{r}\n# Data from 01_C_data_preparation\nflow_country <- readr::read_csv(here::here(\"data\", \"processed\", \"flow_country.csv\")) \n\nspp_native_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n\ndf_country_native <- readr::read_csv(file = here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n\nspp_type_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n\ndf_country_type <- readr::read_csv(file = here::here(\"data\",\"processed\", \"df_country_type.csv\"))\n\ndf_bio_dem <- readr::read_csv(file = here::here(\"data\", \"raw\", \"bio-dem_data.csv\"))\n\ninfra_museum <- readr::read_csv(here::here(\"data\", \"processed\", \"infra_museum.csv\"))\n\n# Data from 02_D_beta-countries.qmd\ndf_all_beta <- readr::read_csv(here::here(\"data\", \"processed\", \"df_all_beta.csv\"))\n```\n\nGet a list of countries and regions\n \n```{r}\ncountries_list <- \n  countrycode::codelist |>\n  dplyr::select(region, iso3c) |>\n  tidyr::drop_na(region, iso3c)\n```\n\nJoining primary type (NBT) and native data with Bio-Dem, Infra-museum, and Beta\n    metrics (NBT turnover and native turnover)\n\n```{r}\n# joining type and native data frames\ndf_country_all <-\n  df_country_native |>\n  dplyr::full_join(df_country_type, \n            by = c(\"country_distribution\" = \"country_museum\")) |> \n  dplyr::mutate(\n    region_distribution = ifelse(\n      is.na(region_distribution), \n      region_museum, \n      region_distribution),\n    # REU doesn't have region on dataset\n    region_distribution = ifelse(\n      country_distribution == \"REU\", \n      \"Sub-Saharan Africa\", \n      region_distribution\n      )\n    ) |>\n  dplyr::select(\n    region = region_distribution,\n    country = country_distribution,\n    native_richness = native.richness,\n    type_richness\n  ) |>\n  tidyr::drop_na(country)|>\n  # change NAs to zero\n  dplyr::mutate(\n    dplyr::across(c(native_richness,\n                    type_richness),\n                  ~ifelse(is.na(.),0,.)))\n  \n\n# joining type and native data frame with biodem information\ndf_country_complete <-\n  df_country_all |>\n  dplyr::left_join(df_bio_dem, by = \"country\")\n\n# joining with museum infrastructure information\ndf_country_complete2 <-\n  df_country_complete |>\n  dplyr::left_join(infra_museum, by = c(\"country\" = \"country_museum\"))\n\n# joining with beta metric\ndf_country_complete3 <-\n  df_country_complete2 |>\n  dplyr::left_join(df_all_beta, by = c(\"country\" = \"countries\"))\n\n```\n\n## Modelling number of primary types per country\n\nHere we will model the number (counting) of total NBT in each country. Countries with no NBT in their museums and natural history collections are represented with NA. However the absence of primary types are an important information, and consist in a true absence, meaning that these countries host no NBT. So, first we transformed the NA values in `type_richness` variable to 0. Then we standardized all the predictors to 0 mean and 1 variation unit.\n\n```{r}\ndf_country_complete4 <-\n  df_country_complete3 |>\n  dplyr::ungroup() |>\n  dplyr::mutate(\n    type.richness.pad = ifelse(is.na(type_richness), 0, type_richness),\n    n.museums = ifelse(is.na(n.museums), 0, n.museums)) |>\n  dplyr::select(-type_richness) |>\n  tidyr::drop_na() |>  # removing NAs\n  dplyr::mutate(\n    years.independence = ifelse(yearsSinceIndependence == \"undefined\", 0, yearsSinceIndependence),\n    native.richness.pad = scale(native_richness, center = T, scale = TRUE)[, 1],\n    records.per.area.pad = scale(records_per_area, center = T, scale = T)[, 1],\n    years.independence.pad = scale(as.numeric(years.independence), center = T, scale = T)[, 1],\n    years.independence.fac = ifelse(as.numeric(years.independence) >= 1, 1, 0),\n    gdp.pad = scale(e_migdppc, center = T, scale = T)[, 1],\n    n.museums.pad = scale(n.museums, center = T, scale = T)[, 1],\n    colonization = relevel(as.factor(years.independence.fac), ref = \"0\")\n  )\n```\n\nTransforming turnover metrics (NBT turnover and Native turnover) to fit in the model. Here we transform beta metrics to fit it between zero and one, following [Ferrari and Cribari-Neto](https://www.ime.usp.br/~sferrari/beta.pdf)\n\n```{r}\n# just transforming type and native turnover variable to fit it between zero and one\n\n# First creating a function to transform the data and avoid 0 and 1\n\nstd_beta <- function(x, s){\n  x_std <- (x*((length(x) - 1)) + s)/(length(x))\n  return(x_std)\n}\n\ndf_country_complete5 <-\n  df_country_complete4 |>\n  dplyr::mutate(type.beta.model = std_beta(x = type.beta, s = 0.5),\n                native.beta.model = std_beta(x = native.beta, s = 0.5))\n```\n\nData frame used to model Domestic Contribution (DC) and Domestic Retention (DR)\n\n```{r}\ndf_country_prop <- \n  flow_country |> \n  dplyr::group_by(country_museum) |>\n  dplyr::add_count(name = \"total_country_museum\",\n                  wt = n) |>\n  dplyr::ungroup() |>\n  #add total_world\n  dplyr::add_count(name = \"total_type_world\",\n                   wt = n) |>\n  #filter only the flow to the same country\n  dplyr::filter(country_type == country_museum) |>\n  #rename to domestic_type_retained\n  dplyr::rename(domestic_type_retained = n) |>\n  #add prop_DC, prop_DR, and prop_CW\n  # DC - Domestic Contribution\n  # DR - Domestic Retention\n  # WC - World Contribution\n  dplyr::mutate(\n    prop_DC = domestic_type_retained/total_country_museum,\n    prop_DR = domestic_type_retained/total_country_type,\n    prop_WC = total_country_museum/total_type_world,\n    prop_DC = ifelse(is.na(prop_DC), 0, prop_DC)) |> \n  dplyr::select(-country_museum) |> \n  dplyr::rename(country = country_type) |> \n  dplyr::filter(total_country_type != 0)\n\n```\n\nJoin the df_country_prop with df_country_biodem5\n\nAdditionally, create a metric of success and failure for each proportion. These\n    quantities will be later used in the modelling approach\n\n```{r}\ndf_country_complete6 <- \n  df_country_prop |> \n  dplyr::inner_join(df_country_complete5, by = c(\"country\")) |> \n  dplyr::mutate(\n    prop_DC.pad = std_beta(x = prop_DC, s = 0.5), \n    prop_DR.pad = std_beta(x = prop_DR, s = 0.5),\n    success.DC = domestic_type_retained, \n    failures.DC = total_country_museum - domestic_type_retained, \n    success.DR = domestic_type_retained, \n    failures.DR = total_country_type - domestic_type_retained\n    )\n```\n\n# Saving data sets to be used in the models `04_A_model_NBTs.qmd`\n\n```{r}\nreadr::write_csv(df_country_complete6, here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\nreadr::write_csv(df_country_prop, here::here(\"data\", \"processed\", \"df_country_prop.csv\"))\n```\n\n","srcMarkdownNoYaml":"\n\n# General overview\n\nHere we provided data preparation for generalized linear models performed using \n    the script `04_A_model_NBTs.qmd`\n\n# Reading libraries and data\n\n```{r}\nlibrary(dplyr)       # data manipulation\nlibrary(tidyr)       # data tidying\nlibrary(here)        # file path management\nlibrary(readr)       # reading and writing CSV files\nlibrary(countrycode) # country and region codes\n```\n\n# Load data\n\n```{r}\n# Data from 01_C_data_preparation\nflow_country <- readr::read_csv(here::here(\"data\", \"processed\", \"flow_country.csv\")) \n\nspp_native_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_native_distribution.csv\")) \n\ndf_country_native <- readr::read_csv(file = here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n\nspp_type_distribution <- readr::read_csv(here::here(\"data\", \"raw\", \"spp_type_distribution.csv\")) \n\ndf_country_type <- readr::read_csv(file = here::here(\"data\",\"processed\", \"df_country_type.csv\"))\n\ndf_bio_dem <- readr::read_csv(file = here::here(\"data\", \"raw\", \"bio-dem_data.csv\"))\n\ninfra_museum <- readr::read_csv(here::here(\"data\", \"processed\", \"infra_museum.csv\"))\n\n# Data from 02_D_beta-countries.qmd\ndf_all_beta <- readr::read_csv(here::here(\"data\", \"processed\", \"df_all_beta.csv\"))\n```\n\nGet a list of countries and regions\n \n```{r}\ncountries_list <- \n  countrycode::codelist |>\n  dplyr::select(region, iso3c) |>\n  tidyr::drop_na(region, iso3c)\n```\n\nJoining primary type (NBT) and native data with Bio-Dem, Infra-museum, and Beta\n    metrics (NBT turnover and native turnover)\n\n```{r}\n# joining type and native data frames\ndf_country_all <-\n  df_country_native |>\n  dplyr::full_join(df_country_type, \n            by = c(\"country_distribution\" = \"country_museum\")) |> \n  dplyr::mutate(\n    region_distribution = ifelse(\n      is.na(region_distribution), \n      region_museum, \n      region_distribution),\n    # REU doesn't have region on dataset\n    region_distribution = ifelse(\n      country_distribution == \"REU\", \n      \"Sub-Saharan Africa\", \n      region_distribution\n      )\n    ) |>\n  dplyr::select(\n    region = region_distribution,\n    country = country_distribution,\n    native_richness = native.richness,\n    type_richness\n  ) |>\n  tidyr::drop_na(country)|>\n  # change NAs to zero\n  dplyr::mutate(\n    dplyr::across(c(native_richness,\n                    type_richness),\n                  ~ifelse(is.na(.),0,.)))\n  \n\n# joining type and native data frame with biodem information\ndf_country_complete <-\n  df_country_all |>\n  dplyr::left_join(df_bio_dem, by = \"country\")\n\n# joining with museum infrastructure information\ndf_country_complete2 <-\n  df_country_complete |>\n  dplyr::left_join(infra_museum, by = c(\"country\" = \"country_museum\"))\n\n# joining with beta metric\ndf_country_complete3 <-\n  df_country_complete2 |>\n  dplyr::left_join(df_all_beta, by = c(\"country\" = \"countries\"))\n\n```\n\n## Modelling number of primary types per country\n\nHere we will model the number (counting) of total NBT in each country. Countries with no NBT in their museums and natural history collections are represented with NA. However the absence of primary types are an important information, and consist in a true absence, meaning that these countries host no NBT. So, first we transformed the NA values in `type_richness` variable to 0. Then we standardized all the predictors to 0 mean and 1 variation unit.\n\n```{r}\ndf_country_complete4 <-\n  df_country_complete3 |>\n  dplyr::ungroup() |>\n  dplyr::mutate(\n    type.richness.pad = ifelse(is.na(type_richness), 0, type_richness),\n    n.museums = ifelse(is.na(n.museums), 0, n.museums)) |>\n  dplyr::select(-type_richness) |>\n  tidyr::drop_na() |>  # removing NAs\n  dplyr::mutate(\n    years.independence = ifelse(yearsSinceIndependence == \"undefined\", 0, yearsSinceIndependence),\n    native.richness.pad = scale(native_richness, center = T, scale = TRUE)[, 1],\n    records.per.area.pad = scale(records_per_area, center = T, scale = T)[, 1],\n    years.independence.pad = scale(as.numeric(years.independence), center = T, scale = T)[, 1],\n    years.independence.fac = ifelse(as.numeric(years.independence) >= 1, 1, 0),\n    gdp.pad = scale(e_migdppc, center = T, scale = T)[, 1],\n    n.museums.pad = scale(n.museums, center = T, scale = T)[, 1],\n    colonization = relevel(as.factor(years.independence.fac), ref = \"0\")\n  )\n```\n\nTransforming turnover metrics (NBT turnover and Native turnover) to fit in the model. Here we transform beta metrics to fit it between zero and one, following [Ferrari and Cribari-Neto](https://www.ime.usp.br/~sferrari/beta.pdf)\n\n```{r}\n# just transforming type and native turnover variable to fit it between zero and one\n\n# First creating a function to transform the data and avoid 0 and 1\n\nstd_beta <- function(x, s){\n  x_std <- (x*((length(x) - 1)) + s)/(length(x))\n  return(x_std)\n}\n\ndf_country_complete5 <-\n  df_country_complete4 |>\n  dplyr::mutate(type.beta.model = std_beta(x = type.beta, s = 0.5),\n                native.beta.model = std_beta(x = native.beta, s = 0.5))\n```\n\nData frame used to model Domestic Contribution (DC) and Domestic Retention (DR)\n\n```{r}\ndf_country_prop <- \n  flow_country |> \n  dplyr::group_by(country_museum) |>\n  dplyr::add_count(name = \"total_country_museum\",\n                  wt = n) |>\n  dplyr::ungroup() |>\n  #add total_world\n  dplyr::add_count(name = \"total_type_world\",\n                   wt = n) |>\n  #filter only the flow to the same country\n  dplyr::filter(country_type == country_museum) |>\n  #rename to domestic_type_retained\n  dplyr::rename(domestic_type_retained = n) |>\n  #add prop_DC, prop_DR, and prop_CW\n  # DC - Domestic Contribution\n  # DR - Domestic Retention\n  # WC - World Contribution\n  dplyr::mutate(\n    prop_DC = domestic_type_retained/total_country_museum,\n    prop_DR = domestic_type_retained/total_country_type,\n    prop_WC = total_country_museum/total_type_world,\n    prop_DC = ifelse(is.na(prop_DC), 0, prop_DC)) |> \n  dplyr::select(-country_museum) |> \n  dplyr::rename(country = country_type) |> \n  dplyr::filter(total_country_type != 0)\n\n```\n\nJoin the df_country_prop with df_country_biodem5\n\nAdditionally, create a metric of success and failure for each proportion. These\n    quantities will be later used in the modelling approach\n\n```{r}\ndf_country_complete6 <- \n  df_country_prop |> \n  dplyr::inner_join(df_country_complete5, by = c(\"country\")) |> \n  dplyr::mutate(\n    prop_DC.pad = std_beta(x = prop_DC, s = 0.5), \n    prop_DR.pad = std_beta(x = prop_DR, s = 0.5),\n    success.DC = domestic_type_retained, \n    failures.DC = total_country_museum - domestic_type_retained, \n    success.DR = domestic_type_retained, \n    failures.DR = total_country_type - domestic_type_retained\n    )\n```\n\n# Saving data sets to be used in the models `04_A_model_NBTs.qmd`\n\n```{r}\nreadr::write_csv(df_country_complete6, here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\nreadr::write_csv(df_country_prop, here::here(\"data\", \"processed\", \"df_country_prop.csv\"))\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"03_D_data_preparation_models.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","theme":"cosmo","title":"03 Data preparation for models"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}